#defcfunc GetTabbedParameter str FilePath, str SearchString
	exist exedir + FilePath
	if ( strsize == (-1) & exporting != 1 ) {
		dialog "The file " + exedir + FilePath + " does not exist."
		return "-1"
	}
	else {
		buf = ""
		ReturnString = ""
		notesel buf
		noteload exedir + FilePath

		repeat noteinfo(0)
			noteget FileLoadString_1, cnt
			if ( instr( FileLoadString_1, 0, SearchString) != (-1) ) {
				StringOffset = 0
				StringOffset = instr(FileLoadString_1, StringOffset, "\t")
				ReturnString = strmid(FileLoadString_1, StringOffset + 1, strlen(FileLoadString_1) - StringOffset)
				break
			}
		loop

		noteunsel
		return ReturnString
	}
	noteunsel
	return ""

#defcfunc RemoveTabs str RTInput
	TempString = RTInput
	ReturnString = ""
	if ( instr(TempString, 0, "\t") == (-1) ) {
		return TempString
	}

	while instr(Tempstring, 0, "\t") != (-1)
		LBLoc = instr(Tempstring, 0, "\t")
		ReturnString = ReturnString + strmid(TempString, 0, LBLoc) + "\\t\\t"
		TempString = strmid(TempString, LBLoc+2, strlen(TempString) - LBLoc)
	wend

	return ReturnString + TempString

#defcfunc RemoveLineBreaks str RLBInput
	TempString = RLBInput
	ReturnString = ""
	if ( instr(TempString, 0, "\n") == (-1) ) {
		return TempString
	}

	while instr(Tempstring, 0, "\n") != (-1)
		LBLoc = instr(Tempstring, 0, "\n")
		ReturnString = ReturnString + strmid(TempString, 0, LBLoc) + "\\n"
		TempString = strmid(TempString, LBLoc+2, strlen(TempString) - LBLoc)
	wend

	return ReturnString + TempString

#defcfunc AddLineBreaks str ALBInput
	TempString = ALBInput
	ReturnString = ""
	if ( instr(TempString, 0, "\\n") == (-1) ) {
		return TempString
	}

	while instr(Tempstring, 0, "\\n") != (-1)
		LBLoc = instr(Tempstring, 0, "\\n")
		ReturnString = ReturnString + strmid(TempString, 0, LBLoc) + "\n"
		TempString = strmid(TempString, LBLoc+2, strlen(TempString) - LBLoc)
	wend

	return ReturnString + TempString

#defcfunc AddTabs str ATInput
	TempString = ATInput
	ReturnString = ""
	if ( instr(TempString, 0, "\\t") == (-1) ) {
		return TempString
	}

	while instr(Tempstring, 0, "\\t") != (-1)
		LBLoc = instr(Tempstring, 0, "\\t")
		ReturnString = ReturnString + strmid(TempString, 0, LBLoc) + "\t"
		TempString = strmid(TempString, LBLoc+2, strlen(TempString) - LBLoc)
	wend

	return ReturnString + TempString

/*
	Checks a string for various placeholders, replaces them with the appropriate text, and then returns
	the final string. String remains unmodified if placeholders are not found.

	Written using 1.67, but should not require updating for different versions.
*/
#defcfunc ParseString str InputString
	ReturnString = InputString

	if ( instr(ReturnString, 0, "%syujin%") != (-1) ) {
		PLen = strlen("%syujin%")
		StringOffset = instr(ReturnString, 0, "%syujin%")
		ReturnString = strmid(ReturnString, 0, StringOffset) + _syujin(cdata(CDATA_SEX, CHARA_PLAYER)) + strmid(ReturnString, StringOffset + PLen, strlen(ReturnString) - StringOffset - PLen)
	}

	if ( instr(ReturnString, 0, "%onii%") != (-1) ) {
		PLen = strlen("%onii%")
		StringOffset = instr(ReturnString, 0, "%onii%")
		ReturnString = strmid(ReturnString, 0, StringOffset) + _onii(cdata(CDATA_SEX, CHARA_PLAYER)) + strmid(ReturnString, StringOffset + PLen, strlen(ReturnString) - StringOffset - PLen)
	}

	return ReturnString

#deffunc equipinfo2 int eq2_itempos, int eq2_posx, int eq2_posy, int eq2_setnum
	if ( inv(INV_ITEM_KNOWN, eq2_itempos) < ITEM_KNOWN_FULL ) {
		return
	}
	switch eq2_setnum
		case 2
			ValList = SKILL_ATTR_LIFE,SKILL_ATTR_MANA,SKILL_ATTR_STR,SKILL_ATTR_CON,SKILL_ATTR_DEX,SKILL_ATTR_PER,SKILL_ATTR_LER,SKILL_ATTR_WIL,SKILL_ATTR_MAG,SKILL_ATTR_CHA,SKILL_ATTR_SPD
			swbreak
		case 3
			ValList = SKILL_ATTR_LUC,SKILL_WEAPON_LONGSWORD,SKILL_WEAPON_SHORTSWORD,SKILL_WEAPON_AXE,SKILL_WEAPON_BLUNT,SKILL_WEAPON_POLEARM,SKILL_WEAPON_STAVE,SKILL_WEAPON_MARTIAL_ARTS,SKILL_WEAPON_SCYTHE,SKILL_WEAPON_BOW,SKILL_WEAPON_CROSSBOW
			swbreak
		case 4
			ValList = SKILL_WEAPON_FIREARM,SKILL_WEAPON_THROWING,SKILL_NORMAL_LITERACY,SKILL_NORMAL_GENE_ENGINEER,SKILL_NORMAL_TACTICS,SKILL_NORMAL_WEIGHT_LIFTING,SKILL_NORMAL_HEALING,SKILL_NORMAL_MEDITATION,SKILL_NORMAL_NEGOTIATION,SKILL_NORMAL_STEALTH,SKILL_NORMAL_LOCK_PICKING
			swbreak
		case 5
			ValList = SKILL_NORMAL_DETECTION,SKILL_NORMAL_INVESTING,SKILL_NORMAL_ANATOMY,SKILL_NORMAL_SENSE_QUALITY,SKILL_NORMAL_MINING,SKILL_NORMAL_MAGIC_CAPACITY,SKILL_NORMAL_MEMORIZATION,SKILL_NORMAL_DUAL_WIELD,SKILL_NORMAL_TWO_HAND,SKILL_NORMAL_SHIELD,SKILL_NORMAL_HEAVY_ARMOR
			swbreak
		case 6
			ValList = SKILL_NORMAL_MEDIUM_ARMOR,SKILL_NORMAL_LIGHT_ARMOR,SKILL_NORMAL_CASTING,SKILL_NORMAL_EVASION,SKILL_NORMAL_MAGIC_DEVICE,SKILL_NORMAL_DISARM_TRAP,SKILL_NORMAL_CARPENTRY,SKILL_NORMAL_TAILORING,SKILL_NORMAL_ALCHEMY,SKILL_NORMAL_JEWELER,SKILL_NORMAL_GARDENING
			swbreak
		case 7
			ValList = SKILL_NORMAL_FAITH,SKILL_NORMAL_TRAVELING,SKILL_NORMAL_PERFORMER,SKILL_NORMAL_COOKING,SKILL_NORMAL_FISHING,SKILL_NORMAL_EYE_OF_MIND,SKILL_NORMAL_GREATER_EVASION,SKILL_NORMAL_CONTROL_MAGIC,SKILL_NORMAL_MARKSMAN,SKILL_NORMAL_SWIMMING,SKILL_ACTIVE_PICKPOCKET
			swbreak
		case 8
			ValList = SKILL_ACTIVE_RIDING, 0
			swbreak
	swend
	LoopCount = 0
	while LoopCount < 11
		if ( ValList(LoopCount) == 0 ) {
			_break
		}
		repeat RANGE_INV_ITEM_ENCHANT
			locvar_equipinfo_p = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, eq2_itempos)
			if ( locvar_equipinfo_p == 0 ) {
				break
			}
			locvar_colorres_i = locvar_equipinfo_p / EXT_ENCHANTMENT
			if ( locvar_colorres_i != ENCHANT_ATTRIBUTE & locvar_colorres_i != ENCHANT_SKILL ) {
				continue
			}
			if ( locvar_equipinfo_p \ EXT_ENCHANTMENT != ValList(LoopCount) ) {
				continue
			}
			pos eq2_posx + LoopCount * 20, eq2_posy
			locvar_equipinfo_p = abs(inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, eq2_itempos) / 50 + 1)
			if ( int(inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, eq2_itempos) / EXT_ENCHANTMENT) == ENCHANT_SKILL ) {
				locvar_equipinfo_s = "" + ((locvar_equipinfo_p / 5) + 1)
			}
			else {
				locvar_equipinfo_s = "" + locvar_equipinfo_p
			}
			if ( jp ) {
				colorres
				if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, eq2_itempos) >= 0 ) {
					mes "Åú"
				}
				else {
					mes "Å•"
				}
				pos eq2_posx + LoopCount * 20 + 5, eq2_posy + 1
				color 0, 0, 0
				mes locvar_equipinfo_s
				pos eq2_posx + LoopCount * 20 + 4, eq2_posy
				color 255, 255, 255
				mes locvar_equipinfo_s
			}
			else {
				color 80, 60, 40
				pos eq2_posx + LoopCount * 20 + 5, eq2_posy
				mes "" + locvar_equipinfo_s
				colorres
				if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, eq2_itempos) < (-99) ) {
					color 140, 26, 36
				}
				else {
					color 26, 140, 90
				}
				pos eq2_posx + LoopCount * 20 + 4, eq2_posy
				mes "" + locvar_equipinfo_s
			}
		loop
		LoopCount++
	wend
	return

