*sRefDefine
	dim sdataref, 7, MAX_SKILL
	sdim skillname, 16, MAX_SKILL
	sdim skilldesc, 40, MAX_SKILL
	sdim skillencdesc, 40, STARTING_SKILL_SPACT

	// Attributes
	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_LIFE) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_LIFE) = lang("ê∂ñΩóÕ", "Life")
	skilldesc(SKILL_ATTR_LIFE) = ""
	skillencdesc(SKILL_ATTR_LIFE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_MANA) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_MANA) = lang("É}Éi", "Mana")
	skilldesc(SKILL_ATTR_MANA) = ""
	skillencdesc(SKILL_ATTR_MANA) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_STR) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_STR) = lang("ãÿóÕ", "Strength")
	skilldesc(SKILL_ATTR_STR) = ""
	skillencdesc(SKILL_ATTR_STR) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_CON) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_CON) = lang("ëœãv", "Constitution")
	skilldesc(SKILL_ATTR_CON) = ""
	skillencdesc(SKILL_ATTR_CON) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_DEX) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_DEX) = lang("äÌóp", "Dexterity")
	skilldesc(SKILL_ATTR_DEX) = ""
	skillencdesc(SKILL_ATTR_DEX) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_PER) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_PER) = lang("ä¥äo", "Perception")
	skilldesc(SKILL_ATTR_PER) = ""
	skillencdesc(SKILL_ATTR_PER) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_LER) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_LER) = lang("èKìæ", "Learning")
	skilldesc(SKILL_ATTR_LER) = ""
	skillencdesc(SKILL_ATTR_LER) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_WIL) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_WIL) = lang("à”éu", "Will")
	skilldesc(SKILL_ATTR_WIL) = ""
	skillencdesc(SKILL_ATTR_WIL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_MAG) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_MAG) = lang("ñÇóÕ", "Magic")
	skilldesc(SKILL_ATTR_MAG) = ""
	skillencdesc(SKILL_ATTR_MAG) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_CHA) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_CHA) = lang("ñ£óÕ", "Charisma")
	skilldesc(SKILL_ATTR_CHA) = ""
	skillencdesc(SKILL_ATTR_CHA) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_SPD) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_SPD) = lang("ë¨ìx", "Speed")
	skilldesc(SKILL_ATTR_SPD) = ""
	skillencdesc(SKILL_ATTR_SPD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_ATTR_LUC) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_ATTR_LUC) = lang("â^ê®", "Luck")
	skilldesc(SKILL_ATTR_LUC) = ""
	skillencdesc(SKILL_ATTR_LUC) = ""

	// Resistances
	sdataref(SKILL_DATAREF_USE, SKILL_RES_FIRE) = SKILL_NONE, SKILL_TYPE_SP, 0, 1, 0
	skillname(SKILL_RES_FIRE) = lang("âŒâä", "fire")
	skilldesc(SKILL_RES_FIRE) = lang("îMÇ‚âäÇ÷ÇÃëœê´", "Resistance to fire.")
	skillencdesc(SKILL_RES_FIRE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_COLD) = SKILL_NONE, SKILL_TYPE_SP, 0, 1, 0
	skillname(SKILL_RES_COLD) = lang("ó‚ãC", "cold")
	skilldesc(SKILL_RES_COLD) = lang("ó‚ãCÇ‚ïXÇ÷ÇÃëœê´", "Resistance to cold.")
	skillencdesc(SKILL_RES_COLD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_LIGHTNING) = SKILL_NONE, SKILL_TYPE_SP, 0, 1, 0
	skillname(SKILL_RES_LIGHTNING) = lang("ìdåÇ", "lightning")
	skilldesc(SKILL_RES_LIGHTNING) = lang("óãÇ‚ìdãCÇ÷ÇÃëœê´", "Resistance to lightning.")
	skillencdesc(SKILL_RES_LIGHTNING) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_DARKNESS) = SKILL_NONE, SKILL_TYPE_SP, 0, 2, 0
	skillname(SKILL_RES_DARKNESS) = lang("à√çï", "darkness")
	skilldesc(SKILL_RES_DARKNESS) = lang("à√çïÇ‚ñ”ñ⁄Ç÷ÇÃëœê´", "Resistance to darkness.")
	skillencdesc(SKILL_RES_DARKNESS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_MIND) = SKILL_NONE, SKILL_TYPE_SP, 0, 2, 0
	skillname(SKILL_RES_MIND) = lang("å∂òf", "mind")
	skilldesc(SKILL_RES_MIND) = lang("ê∏ê_çUåÇÇ÷ÇÃíÔçRóÕ", "Resistance to mind.")
	skillencdesc(SKILL_RES_MIND) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_POISON) = SKILL_NONE, SKILL_TYPE_SP, 0, 3, 0
	skillname(SKILL_RES_POISON) = lang("ì≈", "poison")
	skilldesc(SKILL_RES_POISON) = lang("ì≈Ç÷ÇÃëœê´", "Resistance to poison.")
	skillencdesc(SKILL_RES_POISON) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_NETHER) = SKILL_NONE, SKILL_TYPE_SP, 0, 4, 0
	skillname(SKILL_RES_NETHER) = lang("ínçñ", "nether")
	skilldesc(SKILL_RES_NETHER) = lang("ê∂ñΩãzé˚Ç÷ÇÃíÔçRóÕ", "Resistance to nether.")
	skillencdesc(SKILL_RES_NETHER) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_SOUND) = SKILL_NONE, SKILL_TYPE_SP, 0, 3, 0
	skillname(SKILL_RES_SOUND) = lang("âπ", "sound")
	skilldesc(SKILL_RES_SOUND) = lang("âπîgÇ‚çåâπÇ÷ÇÃëœê´", "Resistance to sound.")
	skillencdesc(SKILL_RES_SOUND) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_NERVE) = SKILL_NONE, SKILL_TYPE_SP, 0, 3, 0
	skillname(SKILL_RES_NERVE) = lang("ê_åo", "nerve")
	skilldesc(SKILL_RES_NERVE) = lang("êáñ∞Ç‚ñÉ·ÉÇ÷ÇÃëœê´", "Resistance to nerve.")
	skillencdesc(SKILL_RES_NERVE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_CHAOS) = SKILL_NONE, SKILL_TYPE_SP, 0, 4, 0
	skillname(SKILL_RES_CHAOS) = lang("ç¨ì◊", "chaos")
	skilldesc(SKILL_RES_CHAOS) = lang("ç¨ì◊ÇÃå¯â Ç÷ÇÃëœê´", "Resistance to chaos.")
	skillencdesc(SKILL_RES_CHAOS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RES_MAGIC) = SKILL_NONE, SKILL_TYPE_SP, 0, 5, 0
	skillname(SKILL_RES_MAGIC) = lang("ñÇñ@", "magic")
	skilldesc(SKILL_RES_MAGIC) = lang("ñÇñ@çUåÇÇ÷ÇÃëœê´", "Resistance to magic.")
	skillencdesc(SKILL_RES_MAGIC) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_RESDMG_CUT) = SKILL_NONE, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_RESDMG_CUT) = lang("èoåå", "cut")
	skilldesc(SKILL_RESDMG_CUT) = lang("êÿÇËèùÇ÷ÇÃëœê´", "Resistance to cut.")
	skillencdesc(SKILL_RESDMG_CUT) = ""

	// Weapon skills
	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_LONGSWORD) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_LONGSWORD) = lang("í∑åï", "Long Sword")
	skilldesc(SKILL_WEAPON_LONGSWORD) = lang("ênìnÇËÇÃí∑Ç¢åïÇàµÇ§ãZèp", "Indicates your skill with long swords.")
	skillencdesc(SKILL_WEAPON_LONGSWORD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_SHORTSWORD) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_SHORTSWORD) = lang("íZåï", "Short Sword")
	skilldesc(SKILL_WEAPON_SHORTSWORD) = lang("ênìnÇËÇÃíZÇ¢åïÇàµÇ§ãZèp", "Indicates your skill with short swords.")
	skillencdesc(SKILL_WEAPON_SHORTSWORD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_AXE) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_AXE) = lang("ïÄ", "Axe")
	skilldesc(SKILL_WEAPON_AXE) = lang("ïÄÇàµÇ§ãZèp", "Indicates your skill with axes.")
	skillencdesc(SKILL_WEAPON_AXE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_BLUNT) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_BLUNT) = lang("ì›äÌ", "Blunt")
	skilldesc(SKILL_WEAPON_BLUNT) = lang("ì›äÌÇàµÇ§ãZèp", "Indicates your skill with blunt weapons.")
	skillencdesc(SKILL_WEAPON_BLUNT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_POLEARM) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_POLEARM) = lang("ëÑ", "Polearm")
	skilldesc(SKILL_WEAPON_POLEARM) = lang("ëÑÇàµÇ§ãZèp", "Indicates your skill with polearms.")
	skillencdesc(SKILL_WEAPON_POLEARM) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_STAVE) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_STAVE) = lang("èÒ", "Stave")
	skilldesc(SKILL_WEAPON_STAVE) = lang("èÒÇàµÇ§ãZèp", "Indicates your skill with staves.")
	skillencdesc(SKILL_WEAPON_STAVE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_MARTIAL_ARTS) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_MARTIAL_ARTS) = lang("äiì¨", "Martial Arts")
	skilldesc(SKILL_WEAPON_MARTIAL_ARTS) = lang("äiì¨ÇÃãZèp", "Indicates your skill fighting unarmed.")
	skillencdesc(SKILL_WEAPON_MARTIAL_ARTS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_SCYTHE) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_SCYTHE) = lang("äô", "Scythe")
	skilldesc(SKILL_WEAPON_SCYTHE) = lang("äôÇàµÇ§ãZèp", "Indicates your skill with scythes.")
	skillencdesc(SKILL_WEAPON_SCYTHE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_BOW) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_BOW) = lang("ã|", "Bow")
	skilldesc(SKILL_WEAPON_BOW) = lang("ã|ÇàµÇ§ãZèp", "Indicates your skill with bows.")
	skillencdesc(SKILL_WEAPON_BOW) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_CROSSBOW) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_CROSSBOW) = lang("ÉNÉçÉXÉ{ÉE", "Crossbow")
	skilldesc(SKILL_WEAPON_CROSSBOW) = lang("ÉNÉçÉXÉ{ÉEÇàµÇ§ãZèp", "Indicates your skill with crossbows.")
	skillencdesc(SKILL_WEAPON_CROSSBOW) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_FIREARM) = SKILL_ATTR_PER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_FIREARM) = lang("èeäÌ", "Firearm")
	skilldesc(SKILL_WEAPON_FIREARM) = lang("âìäuã@ëïÇàµÇ§ãZèp", "Indicates your skill with firearms.")
	skillencdesc(SKILL_WEAPON_FIREARM) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_WEAPON_THROWING) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_WEAPON_THROWING) = lang("ìäù±", "Throwing")
	skilldesc(SKILL_WEAPON_THROWING) = lang("ìäù±ìπãÔÇàµÇ§ãZèp", "Indicates your skill with throwing objects.")
	skillencdesc(SKILL_WEAPON_THROWING) = ""

	// Normal skills
	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_LITERACY) = SKILL_ATTR_LER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_LITERACY) = lang("ì«èë", "Literacy")
	skilldesc(SKILL_NORMAL_LITERACY) = lang("ìÔâÇ»ñ{ÇÃâì«Çâ¬î\Ç…Ç∑ÇÈ", "Allows you to read difficult books.")
	skillencdesc(SKILL_NORMAL_LITERACY) = lang("ñ{ÇÃóùâÇê[ÇﬂÇÈ", "makes you literate.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_GENE_ENGINEER) = SKILL_ATTR_LER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_GENE_ENGINEER) = lang("ê∂âªäw", "Gene Engineer")
	skilldesc(SKILL_NORMAL_GENE_ENGINEER) = lang("î\óÕï°çáÇÃíméØÇçÇÇﬂÇÈ", "Allows you to control genes.")
	skillencdesc(SKILL_NORMAL_GENE_ENGINEER) = lang("ê∂âªäwÇÃíméØÇê[ÇﬂÇÈ", "makes you a better gene engineer.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_TACTICS) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_TACTICS) = lang("êÌèp", "Tactics")
	skilldesc(SKILL_NORMAL_TACTICS) = lang("ãﬂê⁄çUåÇÇÃà–óÕÇÇ†Ç∞ÇÈ", "Increases melee damage.")
	skillencdesc(SKILL_NORMAL_TACTICS) = lang("êÌèpÇÃóùâÇê[ÇﬂÇÈ", "makes you a better tactician.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_WEIGHT_LIFTING) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_WEIGHT_LIFTING) = lang("èdó ãìÇ∞", "Weight Lifting")
	skilldesc(SKILL_NORMAL_WEIGHT_LIFTING) = lang("èdÇ¢â◊ï®ÇéùÇøâ^Ç‘Ç±Ç∆Çâ¬î\Ç…Ç∑ÇÈ", "Allows you to carry more stuff.")
	skillencdesc(SKILL_NORMAL_WEIGHT_LIFTING) = lang("ÇÊÇËèdÇ¢ï®ÇÃâ^î¿Çâ¬î\Ç…Ç∑ÇÈ", "makes you better at weight lifting.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_HEALING) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_HEALING) = lang("é°ñ¸", "Healing")
	skilldesc(SKILL_NORMAL_HEALING) = lang("âˆâ‰Çé©ëRÇ…é°ñ¸Ç∑ÇÈ", "Gradually heals your wounds.")
	skillencdesc(SKILL_NORMAL_HEALING) = lang("ëÃóÕâÒïúÇã≠âªÇ∑ÇÈ", "enhances your body metabolism.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MEDITATION) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MEDITATION) = lang("·“ëz", "Meditation")
	skilldesc(SKILL_NORMAL_MEDITATION) = lang("è¡ñ’ÇµÇΩÉ}ÉiÇâÒïúÇ≥ÇπÇÈ", "Gradually restores your magic points.")
	skillencdesc(SKILL_NORMAL_MEDITATION) = lang("É}ÉiâÒïúÇã≠âªÇ∑ÇÈ", "enhances your meditation.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_NEGOTIATION) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_NEGOTIATION) = lang("åè¬", "Negotiation")
	skilldesc(SKILL_NORMAL_NEGOTIATION) = lang("åè¬Ç‚è§íkÇóLóòÇ…êiÇﬂÇÈ", "Convinces someone to give you better deals.")
	skillencdesc(SKILL_NORMAL_NEGOTIATION) = lang("åè¬ÇóLóòÇ…êiÇﬂÇ≥ÇπÇÈ", "grants you knowledge of negotiation.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_STEALTH) = SKILL_ATTR_PER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_STEALTH) = lang("âBñß", "Stealth")
	skilldesc(SKILL_NORMAL_STEALTH) = lang("é¸àÕÇ…ãCÇ√Ç©ÇÍÇ∏çsìÆÇ∑ÇÈ", "Allows you to move quietly.")
	skillencdesc(SKILL_NORMAL_STEALTH) = lang("âBñßî\óÕÇã≠âªÇ∑ÇÈ", "enhances your ability to hide.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_LOCK_PICKING) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_LOCK_PICKING) = lang("åÆäJÇØ", "Lock Picking")
	skilldesc(SKILL_NORMAL_LOCK_PICKING) = lang("åÆÇäJÇØÇÈ", "Allows you to pick more difficult locks.")
	skillencdesc(SKILL_NORMAL_LOCK_PICKING) = lang("åÆäJÇØÇÃî\óÕÇã≠âªÇ∑ÇÈ", "grants you the trick of lock picking.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_DETECTION) = SKILL_ATTR_PER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_DETECTION) = lang("íTím", "Detection")
	skilldesc(SKILL_NORMAL_DETECTION) = lang("âBÇ≥ÇÍÇΩèÍèäÇ‚„©Çå©Ç¬ÇØÇÈ", "It is used to search hidden locations and traps.")
	skillencdesc(SKILL_NORMAL_DETECTION) = lang("íTímî\óÕÇã≠âªÇ∑ÇÈ", "enhances your ability to detect objects.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_INVESTING) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_INVESTING) = lang("ìäéë", "Investing")
	skilldesc(SKILL_NORMAL_INVESTING) = lang("å¯â ìIÇ…ìäéëÇçsÇ§", "Lowers the money needed to invest in shops.")
	skillencdesc(SKILL_NORMAL_INVESTING) = lang("ÇÊÇËà¿Ç¢âøäiÇ≈ÇÃìäéëÇâ¬î\Ç…Ç∑ÇÈ", "grants you knowledge of investing.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_ANATOMY) = SKILL_ATTR_LER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_ANATOMY) = lang("âñUäw", "Anatomy")
	skilldesc(SKILL_NORMAL_ANATOMY) = lang("éÄëÃÇécÇµÇ‚Ç∑Ç≠Ç∑ÇÈ", "Gives you a better chance of finding body parts.")
	skillencdesc(SKILL_NORMAL_ANATOMY) = lang("éÄëÃÇécÇµÇ‚Ç∑Ç≠Ç∑ÇÈ", "grants you knowledge of anatomy.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_SENSE_QUALITY) = SKILL_ATTR_PER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_SENSE_QUALITY) = lang("ï™êÕ", "Analysis")
	skilldesc(SKILL_NORMAL_SENSE_QUALITY) = lang("ï®ÇÃéÌóﬁÇ‚ìGÇÃçUåÇÉpÉ^Å[ÉìÇä¥Ç∂éÊÇÈ", "Allows you to feel the object-types and attack-patterns.")
    skillencdesc(SKILL_NORMAL_SENSE_QUALITY) = lang("ï™êÕî\óÕÇçÇÇﬂÇÈ", "improves your analytical ability.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MINING) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MINING) = lang("çÃå@", "Mining")
	skilldesc(SKILL_NORMAL_MINING) = lang("ï«Çå@ÇÈå¯ó¶ÇÇ†Ç∞ÇÈ", "Shows how good of a miner you are.")
	skillencdesc(SKILL_NORMAL_MINING) = lang("çÃå@î\óÕÇã≠âªÇ∑ÇÈ", "enhances your mining skill.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MAGIC_CAPACITY) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MAGIC_CAPACITY) = lang("ñÇóÕÇÃå¿äE", "Magic Capacity")
	skilldesc(SKILL_NORMAL_MAGIC_CAPACITY) = lang("é©ï™Ç‚èÒÇ©ÇÁëΩÇ≠ÇÃñÇóÕÇà¯Ç´èoÇ∑", "Brings out a lot of power from yourself and rods.")
	skillencdesc(SKILL_NORMAL_MAGIC_CAPACITY) = lang("ñÇóÕÇÃå¿äEÇÃóùâÇê[ÇﬂÇÈ", "strengthens various magic capacities.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MEMORIZATION) = SKILL_ATTR_LER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MEMORIZATION) = lang("à√ãL", "Memorization")
	skilldesc(SKILL_NORMAL_MEMORIZATION) = lang("èëï®ÇÃíméØÇ‚çUåÇÇÃï™êÕåãâ ÇãLâØÇ∑ÇÈ", "Memorize knowledge of books and analysis results.")
	skillencdesc(SKILL_NORMAL_MEMORIZATION) = lang("íméØÇÃñYãpÇñhÇÆ", "enhances your memory.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_DUAL_WIELD) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_DUAL_WIELD) = lang("ìÒìÅó¨", "Dual Wield")
	skilldesc(SKILL_NORMAL_DUAL_WIELD) = lang("ï°êîÇÃïêäÌÇàµÇ§ãZèp", "Used when wielding two weapons at the same time.")
	skillencdesc(SKILL_NORMAL_DUAL_WIELD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_TWO_HAND) = SKILL_ATTR_STR, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_TWO_HAND) = lang("óºéËéùÇø", "Two Hand")
	skilldesc(SKILL_NORMAL_TWO_HAND) = lang("óºéËÇ≈ïêäÌÇàµÇ§ãZèp", "Used when wielding a weapon with both hands.")
	skillencdesc(SKILL_NORMAL_TWO_HAND) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_SHIELD) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_SHIELD) = lang("èÇ", "Shield")
	skilldesc(SKILL_NORMAL_SHIELD) = lang("èÇÇàµÇ§ãZèp", "Increases the effectiveness of using shields.")
	skillencdesc(SKILL_NORMAL_SHIELD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_HEAVY_ARMOR) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_HEAVY_ARMOR) = lang("èdëïîı", "Heavy Armor")
	skilldesc(SKILL_NORMAL_HEAVY_ARMOR) = lang("èdÇ¢ëïîıÇàµÇ§ãZèp", "Skill to effectively act while wearing heavy armor.")
	skillencdesc(SKILL_NORMAL_HEAVY_ARMOR) = lang("èdëïîıÇÃãZèpÇè„è∏Ç≥ÇπÇÈ", "")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MEDIUM_ARMOR) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MEDIUM_ARMOR) = lang("íÜëïîı", "Medium Armor")
	skilldesc(SKILL_NORMAL_MEDIUM_ARMOR) = lang("ïÅí ÇÃëïîıÇàµÇ§ãZèp", "Skill to effectively act while wearing medium armor.")
	skillencdesc(SKILL_NORMAL_MEDIUM_ARMOR) = lang("íÜëïîıÇÃãZèpÇè„è∏Ç≥ÇπÇÈ", "")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_LIGHT_ARMOR) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_LIGHT_ARMOR) = lang("åyëïîı", "Light Armor")
	skilldesc(SKILL_NORMAL_LIGHT_ARMOR) = lang("åyÇ¢ëïîıÇàµÇ§ãZèp", "Skill to effectively act while wearing light armor.")
	skillencdesc(SKILL_NORMAL_LIGHT_ARMOR) = lang("åyëïîıÇÃãZèpÇè„è∏Ç≥ÇπÇÈ", "")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_CASTING) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_CASTING) = lang("ârè•", "Casting")
	skilldesc(SKILL_NORMAL_CASTING) = lang("ñÇñ@ârè•ÇÃê¨å˜ó¶ÇÇ†Ç∞ÇÈ", "Reduces the chance of casting failure.")
	skillencdesc(SKILL_NORMAL_CASTING) = lang("ÇÊÇËçÇìxÇ»ârè•Çâ¬î\Ç…Ç≥ÇπÇÈ", "enhances your casting ability.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_EVASION) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_EVASION) = lang("âÒî", "Evasion")
	skilldesc(SKILL_NORMAL_EVASION) = lang("çUåÇÇâÒîÇ∑ÇÈ", "Increases your chance of evading enemy attacks.")
	skillencdesc(SKILL_NORMAL_EVASION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MAGIC_DEVICE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MAGIC_DEVICE) = lang("ñÇìπãÔ", "Magic Device")
	skilldesc(SKILL_NORMAL_MAGIC_DEVICE) = lang("ñÇìπãÔÇå¯â ìIÇ…àµÇ§", "Improves effectiveness of magic devices.")
	skillencdesc(SKILL_NORMAL_MAGIC_DEVICE) = lang("ñÇìπãÔÇÃå¯â ÇÇ†Ç∞ÇÈ", "enhances the power of magical devices.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_DISARM_TRAP) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_DISARM_TRAP) = lang("„©ÇÃíméØ", "Disarm Trap")
	skilldesc(SKILL_NORMAL_DISARM_TRAP) = lang("„©ÇÃê›íuÅEâëÃî\óÕÇã≠âªÇ∑ÇÈ", "Allows you to disarm harder traps.")
	skillencdesc(SKILL_NORMAL_DISARM_TRAP) = lang("„©ÇÃíméØÇê[ÇﬂÇÈ", "grants you the trick of disarming traps.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_CARPENTRY) = SKILL_ATTR_CON, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_CARPENTRY) = lang("çHçÏ", "Carpentry")
	skilldesc(SKILL_NORMAL_CARPENTRY) = lang("ï®Çâ¡çHÇµÅAÉAÉCÉeÉÄÇçÏÇËèoÇ∑", "Skill to cut trees and manufacture products.")
	skillencdesc(SKILL_NORMAL_CARPENTRY) = lang("çHçÏÇÃòrÇÇ†Ç∞ÇÈ", "makes you a better carpenter.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_TAILORING) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_TAILORING) = lang("çŸñD", "Tailoring")
	skilldesc(SKILL_NORMAL_TAILORING) = lang("ävÇ‚ñ†ÇópÇ¢ÅAÉAÉCÉeÉÄÇçÏÇËèoÇ∑", "Skill to sew materials and manufacture products.")
	skillencdesc(SKILL_NORMAL_TAILORING) = lang("çŸñDÇÃòrÇÇ†Ç∞ÇÈ", "makes you a better tailor.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_ALCHEMY) = SKILL_ATTR_LER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_ALCHEMY) = lang("òBã‡èp", "Alchemy")
	skilldesc(SKILL_NORMAL_ALCHEMY) = lang("ólÅXÇ»çﬁóøÇí≤çáÇµÅAÉAÉCÉeÉÄÇçÏÇËèoÇ∑", "Enables you to perform alchemy.")
	skillencdesc(SKILL_NORMAL_ALCHEMY) = lang("òBã‡ÇÃòrÇÇ†Ç∞ÇÈ", "grants you knowledge of alchemy.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_JEWELER) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_JEWELER) = lang("ïÛêŒç◊çH", "Jeweler")
	skilldesc(SKILL_NORMAL_JEWELER) = lang("ïÛêŒÇâ¡çHÇµÅAÉAÉCÉeÉÄÇçÏÇËèoÇ∑", "Skill to process jewels and manufacture products.")
	skillencdesc(SKILL_NORMAL_JEWELER) = lang("ïÛêŒç◊çHÇÃòrÇÇ†Ç∞ÇÈ", "makes you a better jeweler.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_GARDENING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_GARDENING) = lang("çÕî|", "Gardening")
	skilldesc(SKILL_NORMAL_GARDENING) = lang("êAï®ÇàÁÇƒÅAçÃéÊÇ∑ÇÈ", "Skill to plant seeds and harvest crops.")
	skillencdesc(SKILL_NORMAL_GARDENING) = lang("çÕî|ÇÃòrÇÇ†Ç∞ÇÈ", "grants you knowledge of gardening.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FAITH) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_FAITH) = lang("êMã¬", "Faith")
	skilldesc(SKILL_NORMAL_FAITH) = lang("ê_Ç∆ÇÃãóó£ÇãﬂÇﬂÇÈ", "Gets you closer to god.")
	skillencdesc(SKILL_NORMAL_FAITH) = lang("êMã¬Çê[ÇﬂÇÈ", "makes you pious.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_TRAVELING) = SKILL_ATTR_SPD, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_TRAVELING) = lang("ó∑ï‡Ç´", "Traveling")
	skilldesc(SKILL_NORMAL_TRAVELING) = lang("ó∑ÇÃêiçsÇëÅÇﬂåoå±Çê[ÇﬂÇÈ", "Allows you to receive more EXP from traveling.")
	skillencdesc(SKILL_NORMAL_TRAVELING) = lang("ó∑ÇÃènó˚ÇÇ†Ç∞ÇÈ", "makes you a better traveler.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_PERFORMER) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 25, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_NORMAL_PERFORMER) = lang("ââët", "Performer")
	skilldesc(SKILL_NORMAL_PERFORMER) = lang("éøÇÃçÇÇ¢ââëtÇâ¬î\Ç…Ç∑ÇÈ", "Shows how good of a performer you are.")
	skillencdesc(SKILL_NORMAL_PERFORMER) = lang("ââëtÇÃéøÇÇ†Ç∞ÇÈ", "makes your performance better.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_NORMAL_COOKING) = lang("óøóù", "Cooking")
	skilldesc(SKILL_NORMAL_COOKING) = lang("óøóùÇÃòrÇè„Ç∞ÇÈ", "Improves your cooking skill.")
	skillencdesc(SKILL_NORMAL_COOKING) = lang("óøóùÇÃòrÇè„Ç∞ÇÈ", "enhances your cooking skill.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 5, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_NORMAL_FISHING) = lang("íﬁÇË", "Fishing")
	skilldesc(SKILL_NORMAL_FISHING) = lang("íﬁÇËÇâ¬î\Ç…Ç∑ÇÈ", "Displays your fishing skill.")
	skillencdesc(SKILL_NORMAL_FISHING) = lang("íﬁÇËÇÃòrÇÇ†Ç∞ÇÈ", "makes you a better fisherman.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_EYE_OF_MIND) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_EYE_OF_MIND) = lang("êSä·", "Eye of Mind")
	skilldesc(SKILL_NORMAL_EYE_OF_MIND) = lang("ÉNÉäÉeÉBÉJÉãó¶ÇçÇÇﬂÇÈ", "Increases your chance to deliver critical hits.")
	skillencdesc(SKILL_NORMAL_EYE_OF_MIND) = lang("êSä·ÇÃãZèpÇè„è∏Ç≥ÇπÇÈ", "")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_GREATER_EVASION) = SKILL_ATTR_PER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_GREATER_EVASION) = lang("å©êÿÇË", "Greater Evasion")
	skilldesc(SKILL_NORMAL_GREATER_EVASION) = lang("ïsê≥ämÇ»çUåÇÇämé¿Ç…îÇØÇÈ", "Makes you able to evade inaccurate attacks.")
	skillencdesc(SKILL_NORMAL_GREATER_EVASION) = lang("å©êÿÇËÇÃòrÇÇ†Ç∞ÇÈ", "")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_CONTROL_MAGIC) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_CONTROL_MAGIC) = lang("ñÇóÕêßå‰", "Control Magic")
	skilldesc(SKILL_NORMAL_CONTROL_MAGIC) = lang("ñÇñ@Ç…ÇÊÇÈñ°ï˚ÇÃÇ‹Ç´Ç±Ç›Çåyå∏Ç∑ÇÈ", "Prevents your allies from getting hit by your spells.")
	skillencdesc(SKILL_NORMAL_CONTROL_MAGIC) = lang("ÇÊÇËçÇìxÇ»ñÇóÕêßå‰Çâ¬î\Ç…Ç≥ÇπÇÈ", "enhances your ability to control magic.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_MARKSMAN) = SKILL_ATTR_PER, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_MARKSMAN) = lang("éÀåÇ", "Marksman")
	skilldesc(SKILL_NORMAL_MARKSMAN) = lang("éÀåÇÇÃà–óÕÇÇ†Ç∞ÇÈ", "Increases shooting damage.")
	skillencdesc(SKILL_NORMAL_MARKSMAN) = lang("éÀåÇÇÃóùâÇê[ÇﬂÇÈ", "makes you a better marksman.")

	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_SWIMMING) = SKILL_ATTR_SPD, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
	skillname(SKILL_NORMAL_SWIMMING) = lang("íÖàﬂêÖâj", "Swimming")
	skilldesc(SKILL_NORMAL_SWIMMING) = lang("îGÇÍÇΩèÛë‘Ç≈ëfëÅÇ≠çsìÆÇ∑ÇÈ/êÖíÜìKâû", "Allows you to move fast when wet/in water.")
	skillencdesc(SKILL_NORMAL_SWIMMING) = lang("âjÇ¨ÇÃãZèpÇÇ†Ç∞ÇÈ", "makes you a better swimmer.")

	// Active skills
	sdataref(SKILL_DATAREF_USE, SKILL_ACTIVE_PICKPOCKET) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 20, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_ACTIVE_PICKPOCKET) = lang("êﬁìê", "Pickpocket")
	skilldesc(SKILL_ACTIVE_PICKPOCKET) = lang("ãMèdÇ»ï®ïiÇìêÇﬁ", "Shows how good of a thief you are.")
	skillencdesc(SKILL_ACTIVE_PICKPOCKET) = lang("êﬁìêÇÃòrÇÇ†Ç∞ÇÈ", "grants you the trick of pickpocketing.")

	sdataref(SKILL_DATAREF_USE, SKILL_ACTIVE_RIDING) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_ACTIVE_RIDING) = lang("èÊîn", "Riding")
	skilldesc(SKILL_ACTIVE_RIDING) = lang("è„éËÇ…èÊÇËÇ±Ç»Ç∑", "Allows you to ride creatures.")
	skillencdesc(SKILL_ACTIVE_RIDING) = lang("èÊînÇÃòrÇÇ†Ç∞ÇÈ", "enhances your ability to ride.")

	// Spells
	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HEAL_LIGHT) = SKILL_ATTR_WIL, SKILL_TYPE_HEAL, 6, TARGET_TYPE_SELF, 80
	skillname(SKILL_SPELL_HEAL_LIGHT) = lang("åyèùé°ñ¸", "Heal Light")
	skilldesc(SKILL_SPELL_HEAL_LIGHT) = lang("ëÃóÕâÒïú", "Heal self")
	skillencdesc(SKILL_SPELL_HEAL_LIGHT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HEAL_CRITICAL) = SKILL_ATTR_WIL, SKILL_TYPE_HEAL, 15, TARGET_TYPE_SELF, 350
	skillname(SKILL_SPELL_HEAL_CRITICAL) = lang("ívñΩèùé°ñ¸", "Heal Critical")
	skilldesc(SKILL_SPELL_HEAL_CRITICAL) = lang("ëÃóÕâÒïú", "Heal self")
	skillencdesc(SKILL_SPELL_HEAL_CRITICAL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CURE_OF_ERIS) = SKILL_ATTR_WIL, SKILL_TYPE_HEAL, 35, TARGET_TYPE_SELF, 800
	skillname(SKILL_SPELL_CURE_OF_ERIS) = lang("ÉGÉäÉXÇÃñ¸Çµ", "Cure of Eris")
	skilldesc(SKILL_SPELL_CURE_OF_ERIS) = lang("ëÃóÕâÒïú", "Heal self")
	skillencdesc(SKILL_SPELL_CURE_OF_ERIS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CURE_OF_JURE) = SKILL_ATTR_WIL, SKILL_TYPE_HEAL, 80, TARGET_TYPE_SELF, 1300
	skillname(SKILL_SPELL_CURE_OF_JURE) = lang("ÉWÉÖÉAÇÃñ¸Çµ", "Cure of Jure")
	skilldesc(SKILL_SPELL_CURE_OF_JURE) = lang("ëÃóÕâÒïú", "Heal self")
	skillencdesc(SKILL_SPELL_CURE_OF_JURE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HEALING_RAIN) = SKILL_ATTR_WIL, SKILL_TYPE_BALL, 38, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPELL_HEALING_RAIN) = lang("é°ñ¸ÇÃâJ", "Healing Rain")
	skilldesc(SKILL_SPELL_HEALING_RAIN) = lang("ëÃóÕâÒïúÇÃãÖ", "Heal area")
	skillencdesc(SKILL_SPELL_HEALING_RAIN) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HEALING_TOUCH) = SKILL_ATTR_WIL, SKILL_TYPE_HEAL, 20, TARGET_TYPE_DIRECTION, 400
	skillname(SKILL_SPELL_HEALING_TOUCH) = lang("ñ¸ÇµÇÃéË", "Healing Touch")
	skilldesc(SKILL_SPELL_HEALING_TOUCH) = lang("ëÃóÕâÒïú", "Heal target")
	skillencdesc(SKILL_SPELL_HEALING_TOUCH) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HOLY_LIGHT) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF, 400
	skillname(SKILL_SPELL_HOLY_LIGHT) = lang("ê¥èÚÇ»ÇÈåı", "Holy Light")
	skilldesc(SKILL_SPELL_HOLY_LIGHT) = lang("1Ç¬ÇÃéÙÇ¢(hex)èúãé", "Remove one hex")
	skillencdesc(SKILL_SPELL_HOLY_LIGHT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_VANQUISH_HEX) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 35, TARGET_TYPE_DIRECTION, 850
	skillname(SKILL_SPELL_VANQUISH_HEX) = lang("ëSèÚâª", "Vanquish Hex")
	skilldesc(SKILL_SPELL_VANQUISH_HEX) = lang("ëSÇƒÇÃéÙÇ¢(hex)èúãé", "Remove all hexes")
	skillencdesc(SKILL_SPELL_VANQUISH_HEX) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_TELEPORT) = SKILL_ATTR_MAG, SKILL_TYPE_TELEPORT, 10, TARGET_TYPE_SELF_ONLY, 400
	skillname(SKILL_SPELL_TELEPORT) = lang("ÉeÉåÉ|Å[Ég", "Teleport")
	skilldesc(SKILL_SPELL_TELEPORT) = lang("èuä‘à⁄ìÆ", "Teleport self")
	skillencdesc(SKILL_SPELL_TELEPORT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_TELEPORT_OTHER) = SKILL_ATTR_MAG, SKILL_TYPE_TELEPORT, 10, TARGET_TYPE_DIRECTION, 200
	skillname(SKILL_SPELL_TELEPORT_OTHER) = lang("ÉeÉåÉ|Å[ÉgÉAÉUÅ[", "Teleport Other")
	skilldesc(SKILL_SPELL_TELEPORT_OTHER) = lang("ëŒè€Çèuä‘à⁄ìÆÇ≥ÇπÇÈ", "Teleport target")
	skillencdesc(SKILL_SPELL_TELEPORT_OTHER) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SHORT_TELEPORT) = SKILL_ATTR_MAG, SKILL_TYPE_TELEPORT, 8, TARGET_TYPE_SELF_ONLY, 120
	skillname(SKILL_SPELL_SHORT_TELEPORT) = lang("ÉVÉáÅ[ÉgÉeÉåÉ|Å[Ég", "Short Teleport")
	skilldesc(SKILL_SPELL_SHORT_TELEPORT) = lang("ãﬂÇ≠Ç÷ÇÃèuä‘à⁄ìÆ", "Teleport self")
	skillencdesc(SKILL_SPELL_SHORT_TELEPORT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_IDENTIFY) = SKILL_ATTR_PER, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF_ONLY, 800
	skillname(SKILL_SPELL_IDENTIFY) = lang("ä”íË", "Identify")
	skilldesc(SKILL_SPELL_IDENTIFY) = lang("ÉAÉCÉeÉÄä”íË", "Identify one item")
	skillencdesc(SKILL_SPELL_IDENTIFY) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_UNCURSE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 35, TARGET_TYPE_SELF, 700
	skillname(SKILL_SPELL_UNCURSE) = lang("âéÙ", "Uncurse")
	skilldesc(SKILL_SPELL_UNCURSE) = lang("ÉAÉCÉeÉÄâéÙ", "Uncurse items")
	skillencdesc(SKILL_SPELL_UNCURSE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ORACLE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 150, TARGET_TYPE_SELF, 1500
	skillname(SKILL_SPELL_ORACLE) = lang("ê_ëı", "Oracle")
	skilldesc(SKILL_SPELL_ORACLE) = lang("ÉAÅ[ÉeÉBÉtÉ@ÉNÉgä¥ím", "Reveal artifacts")
	skillencdesc(SKILL_SPELL_ORACLE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MAGIC_DART) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 100
	skillname(SKILL_SPELL_MAGIC_DART) = lang("ñÇñ@ÇÃñÓ", "Magic Dart")
	skilldesc(SKILL_SPELL_MAGIC_DART) = lang("ñÇñ@ëÆê´ÇÃñÓ", "Target(Magic)")
	skillencdesc(SKILL_SPELL_MAGIC_DART) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_NETHER_ARROW) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 300
	skillname(SKILL_SPELL_NETHER_ARROW) = lang("ínçñÇÃìfëß", "Nether Sigh")
	skilldesc(SKILL_SPELL_NETHER_ARROW) = lang("ínçñëÆê´ÇÃñÓ", "Target(Nether)")
	skillencdesc(SKILL_SPELL_NETHER_ARROW) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_NERVE_ARROW) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 300
	skillname(SKILL_SPELL_NERVE_ARROW) = lang("ê_åoÇÃêj", "Nerve Needle")
	skilldesc(SKILL_SPELL_NERVE_ARROW) = lang("ê_åoëÆê´ÇÃñÓ", "Target(Nerve)")
	skillencdesc(SKILL_SPELL_NERVE_ARROW) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CHAOS_EYE) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 300
	skillname(SKILL_SPELL_CHAOS_EYE) = lang("ç¨ì◊ÇÃìµ", "Chaos Eye")
	skilldesc(SKILL_SPELL_CHAOS_EYE) = lang("ç¨ì◊ëÆê´ÇÃñÓ", "Target(Chaos)")
	skillencdesc(SKILL_SPELL_CHAOS_EYE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_DARK_EYE) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 300
	skillname(SKILL_SPELL_DARK_EYE) = lang("à√çïÇÃû∂", "Darkness Wedge")
	skilldesc(SKILL_SPELL_DARK_EYE) = lang("à√çïëÆê´ÇÃñÓ", "Target(Darkness)")
	skillencdesc(SKILL_SPELL_DARK_EYE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ICE_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 400
	skillname(SKILL_SPELL_ICE_BOLT) = lang("ÉAÉCÉXÉ{ÉãÉg", "Ice Bolt")
	skilldesc(SKILL_SPELL_ICE_BOLT) = lang("ó‚ãCëÆê´ÇÃÉ{ÉãÉg", "Line(Cold)")
	skillencdesc(SKILL_SPELL_ICE_BOLT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_FIRE_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 400
	skillname(SKILL_SPELL_FIRE_BOLT) = lang("ÉtÉ@ÉCÉAÉ{ÉãÉg", "Fire Bolt")
	skilldesc(SKILL_SPELL_FIRE_BOLT) = lang("âŒâäëÆê´ÇÃÉ{ÉãÉg", "Line(Fire)")
	skillencdesc(SKILL_SPELL_FIRE_BOLT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_LIGHTNING_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 400
	skillname(SKILL_SPELL_LIGHTNING_BOLT) = lang("ÉâÉCÉgÉjÉìÉOÉ{ÉãÉg", "Lightning Bolt")
	skilldesc(SKILL_SPELL_LIGHTNING_BOLT) = lang("óãëÆê´ÇÃÉ{ÉãÉg", "Line(Lightning)")
	skillencdesc(SKILL_SPELL_LIGHTNING_BOLT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_DARKNESS_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPELL_DARKNESS_BOLT) = lang("É_Å[ÉNÉlÉXÉ{ÉãÉg", "Darkness Bolt")
	skilldesc(SKILL_SPELL_DARKNESS_BOLT) = lang("à√çïëÆê´ÇÃÉ{ÉãÉg", "Line(Darkness)")
	skillencdesc(SKILL_SPELL_DARKNESS_BOLT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MIND_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPELL_MIND_BOLT) = lang("É}ÉCÉìÉhÉ{ÉãÉg", "Mind Bolt")
	skilldesc(SKILL_SPELL_MIND_BOLT) = lang("å∂òfëÆê´ÇÃÉ{ÉãÉg", "Line(Mind)")
	skillencdesc(SKILL_SPELL_MIND_BOLT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_NETHER_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, 9000 + 6, 500
	skillname(SKILL_SPELL_NETHER_BOLT) = lang("ÉlÉUÅ[É{ÉãÉg", "Nether Bolt")
	skilldesc(SKILL_SPELL_NETHER_BOLT) = lang("ínçñëÆê´ÇÃÉ{ÉãÉg", "Line(Nether)")
	skillencdesc(SKILL_SPELL_NETHER_BOLT) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_POISON_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, 9000 + 6, 500
	skillname(SKILL_SPELL_POISON_BOLT) = lang("É|ÉCÉYÉìÉ{ÉãÉg", "Poison Bolt")
	skilldesc(SKILL_SPELL_POISON_BOLT) = lang("ì≈ëÆê´ÇÃÉ{ÉãÉg", "Line(Poison)")
	skillencdesc(SKILL_SPELL_POISON_BOLT) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SOUND_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, 9000 + 6, 500
	skillname(SKILL_SPELL_SOUND_BOLT) = lang("ÉTÉEÉìÉhÉ{ÉãÉg", "Sound Bolt")
	skilldesc(SKILL_SPELL_SOUND_BOLT) = lang("âπëÆê´ÇÃÉ{ÉãÉg", "Line(Sound)")
	skillencdesc(SKILL_SPELL_SOUND_BOLT) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CHAOS_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, 9000 + 6, 500
	skillname(SKILL_SPELL_CHAOS_BOLT) = lang("ÉJÉIÉXÉ{ÉãÉg", "Chaos Bolt")
	skilldesc(SKILL_SPELL_CHAOS_BOLT) = lang("ç¨ì◊ëÆê´ÇÃÉ{ÉãÉg", "Line(Chaos)")
	skillencdesc(SKILL_SPELL_CHAOS_BOLT) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_NERVE_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 28, 9000 + 6, 500
	skillname(SKILL_SPELL_NERVE_BOLT) = lang("ÉiÅ[ÉuÉ{ÉãÉg", "Nerve Bolt")
	skilldesc(SKILL_SPELL_NERVE_BOLT) = lang("ê_åoëÆê´ÇÃÉ{ÉãÉg", "Line(Nerve)")
	skillencdesc(SKILL_SPELL_NERVE_BOLT) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SUMMON_MONSTERS) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPELL_SUMMON_MONSTERS) = lang("ÉÇÉìÉXÉ^Å[è¢ä´", "Summon Monsters")
	skilldesc(SKILL_SPELL_SUMMON_MONSTERS) = lang("ÉÇÉìÉXÉ^Å[Çè¢ä´Ç∑ÇÈ", "Summon hostile creatures")
	skillencdesc(SKILL_SPELL_SUMMON_MONSTERS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SUMMON_WILD) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPELL_SUMMON_WILD) = lang("ñÏê∂è¢ä´", "Summon Wild")
	skilldesc(SKILL_SPELL_SUMMON_WILD) = lang("ñÏê∂ÇÃê∂Ç´ï®Çè¢ä´Ç∑ÇÈ", "Summon wild creatures")
	skillencdesc(SKILL_SPELL_SUMMON_WILD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_RETURN) = SKILL_ATTR_PER, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF_ONLY, 550
	skillname(SKILL_SPELL_RETURN) = lang("ãAä“", "Return")
	skilldesc(SKILL_SPELL_RETURN) = lang("ì¡íËÇÃèÍèäÇ÷ÇÃãAä“", "Return")
	skillencdesc(SKILL_SPELL_RETURN) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MAGIC_MAP) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF_ONLY, 450
	skillname(SKILL_SPELL_MAGIC_MAP) = lang("ñÇñ@ÇÃínê}", "Magic Map")
	skilldesc(SKILL_SPELL_MAGIC_MAP) = lang("é¸àÕÇÃínå`ä¥ím", "Reveal surround map")
	skillencdesc(SKILL_SPELL_MAGIC_MAP) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SENSE_OBJECT) = SKILL_ATTR_PER, SKILL_TYPE_SP, 22, TARGET_TYPE_SELF_ONLY, 250
	skillname(SKILL_SPELL_SENSE_OBJECT) = lang("ï®éøä¥ím", "Sense Object")
	skilldesc(SKILL_SPELL_SENSE_OBJECT) = lang("é¸àÕÇÃï®éøä¥ím", "Reveal nearby objects")
	skillencdesc(SKILL_SPELL_SENSE_OBJECT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ICE_BALL) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 600
	skillname(SKILL_SPELL_ICE_BALL) = lang("ïXåãÇÃîgìÆ", "Freezing Wave")
	skilldesc(SKILL_SPELL_ICE_BALL) = lang("ó‚ãCëÆê´ÇÃîÕàÕçUåÇ", "Surround(Cold)")
	skillencdesc(SKILL_SPELL_ICE_BALL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_FIRE_BALL) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 600
	skillname(SKILL_SPELL_FIRE_BALL) = lang("é‹îMÇÃóí", "Burning Storm")
	skilldesc(SKILL_SPELL_FIRE_BALL) = lang("âŒâäëÆê´ÇÃîÕàÕçUåÇ", "Surround(Fire)")
	skillencdesc(SKILL_SPELL_FIRE_BALL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CHAOS_BALL) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 700
	skillname(SKILL_SPELL_CHAOS_BALL) = lang("ç¨ì◊ÇÃâQ", "Chaos Vortex")
	skilldesc(SKILL_SPELL_CHAOS_BALL) = lang("ç¨ì◊ëÆê´ÇÃîÕàÕçUåÇ", "Surround(Chaos)")
	skillencdesc(SKILL_SPELL_CHAOS_BALL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_RAGING_ROAR) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 700
	skillname(SKILL_SPELL_RAGING_ROAR) = lang("çåâπÇÃîgìÆ", "Howling Wave")
	skilldesc(SKILL_SPELL_RAGING_ROAR) = lang("çåâπëÆê´ÇÃîÕàÕçUåÇ", "Surround(Sound)")
	skillencdesc(SKILL_SPELL_RAGING_ROAR) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_DOMINATE) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 125, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 2000
	skillname(SKILL_SPELL_DOMINATE) = lang("éxîz", "Dominate")
	skilldesc(SKILL_SPELL_DOMINATE) = lang("ëŒè€Çéxîz/íáä‘Ç…Ç≈Ç´Ç»Ç¢ëŒè€Ç…ÇÕñÉ·É", "Dominate target/paralyze indomitable targets")
	skillencdesc(SKILL_SPELL_DOMINATE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_WEB) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 10, TARGET_TYPE_LOCATION, 150
	skillname(SKILL_SPELL_WEB) = lang("íwÂÅÇÃëÉ", "Web")
	skilldesc(SKILL_SPELL_WEB) = lang("íwÂÅÇÃëÉî≠ê∂", "Create webs")
	skillencdesc(SKILL_SPELL_WEB) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MIST_OF_DARKNESS) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 12, TARGET_TYPE_SELF, 320
	skillname(SKILL_SPELL_MIST_OF_DARKNESS) = lang("à≈ÇÃñ∂", "Mist of Darkness")
	skilldesc(SKILL_SPELL_MIST_OF_DARKNESS) = lang("îZÇ¢ñ∂ÇÃî≠ê∂", "Create mist")
	skillencdesc(SKILL_SPELL_MIST_OF_DARKNESS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_WALL_CREATION) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 20, TARGET_TYPE_LOCATION, 250
	skillname(SKILL_SPELL_WALL_CREATION) = lang("ï«ê∂ê¨", "Wall Creation")
	skilldesc(SKILL_SPELL_WALL_CREATION) = lang("ï«ÇÃê∂ê¨", "Create walls")
	skillencdesc(SKILL_SPELL_WALL_CREATION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_RESTORE_BODY) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 18, TARGET_TYPE_SELF, 250
	skillname(SKILL_SPELL_RESTORE_BODY) = lang("ì˜ëÃïúäà", "Restore Body")
	skilldesc(SKILL_SPELL_RESTORE_BODY) = lang("ì˜ëÃÇÃé„ëÃâªÇé°ó√/ÉXÉ^É~Éiî˜âÒïú", "Restore physical attributes, Stamina recovery")
	skillencdesc(SKILL_SPELL_RESTORE_BODY) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_RESTORE_SPIRIT) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 18, TARGET_TYPE_SELF, 250
	skillname(SKILL_SPELL_RESTORE_SPIRIT) = lang("ê∏ê_ïúäà", "Restore Spirit")
	skilldesc(SKILL_SPELL_RESTORE_SPIRIT) = lang("ê∏ê_ÇÃé„ëÃâªÇé°ó√/ÉpÉèÅ[ÉQÅ[ÉWî˜ëù", "Restore mental attributes, Increases gauge")
	skillencdesc(SKILL_SPELL_RESTORE_SPIRIT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_WISH) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 580, TARGET_TYPE_SELF_ONLY, 5250
	skillname(SKILL_SPELL_WISH) = lang("äËÇ¢", "Wish")
	skilldesc(SKILL_SPELL_WISH) = lang("äËÇ¢ÇÃå¯â ", "Wish")
	skillencdesc(SKILL_SPELL_WISH) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HOLY_SHIELD) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_HOLY_SHIELD, 8, TARGET_TYPE_SELF, 150
	skillname(SKILL_SPELL_HOLY_SHIELD) = lang("êπÇ»ÇÈèÇ", "Holy Shield")
	skilldesc(SKILL_SPELL_HOLY_SHIELD) = lang("ñhå‰óÕã≠âª", "Improves defense")
	skillencdesc(SKILL_SPELL_HOLY_SHIELD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MIST_OF_SILENCE) = SKILL_ATTR_PER, STARTING_SKILL_TYPE_BUFF + BUFF_MIST_OF_SILENCE, 24, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 620
	skillname(SKILL_SPELL_MIST_OF_SILENCE) = lang("íæñŸÇÃñ∂", "Mist of Silence")
	skilldesc(SKILL_SPELL_MIST_OF_SILENCE) = lang("ñÇñ@égópïsâ¬", "Target can not use magic")
	skillencdesc(SKILL_SPELL_MIST_OF_SILENCE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_REGENERATION) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_REGENERATION, 16, TARGET_TYPE_SELF, 400
	skillname(SKILL_SPELL_REGENERATION) = lang("ÉäÉWÉFÉlÉåÅ[ÉVÉáÉì", "Regeneration")
	skilldesc(SKILL_SPELL_REGENERATION) = ""
	skillencdesc(SKILL_SPELL_REGENERATION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ATTRIBUTE_SHIELD) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_ATTRIBUTE_SHIELD, 14, TARGET_TYPE_SELF, 350
	skillname(SKILL_SPELL_ATTRIBUTE_SHIELD) = lang("ëÆê´ï€åÏ", "Attribute Shield")
	skilldesc(SKILL_SPELL_ATTRIBUTE_SHIELD) = ""
	skillencdesc(SKILL_SPELL_ATTRIBUTE_SHIELD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SPEED) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_SPEED, 28, TARGET_TYPE_SELF, 1050
	skillname(SKILL_SPELL_SPEED) = lang("â¡ë¨", "Speed")
	skilldesc(SKILL_SPELL_SPEED) = ""
	skillencdesc(SKILL_SPELL_SPEED) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SLOW) = SKILL_ATTR_MAG, STARTING_SKILL_TYPE_BUFF + BUFF_SLOW, 10, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 450
	skillname(SKILL_SPELL_SLOW) = lang("ì›ë´", "Slow")
	skilldesc(SKILL_SPELL_SLOW) = ""
	skillencdesc(SKILL_SPELL_SLOW) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HERO) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_HERO, 12, TARGET_TYPE_SELF, 80
	skillname(SKILL_SPELL_HERO) = lang("âpóY", "Hero")
	skilldesc(SKILL_SPELL_HERO) = ""
	skillencdesc(SKILL_SPELL_HERO) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MIST_OF_FRAILNESS) = SKILL_ATTR_MAG, STARTING_SKILL_TYPE_BUFF + BUFF_MIST_OF_FRAILNESS, 8, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 300
	skillname(SKILL_SPELL_MIST_OF_FRAILNESS) = lang("ê∆é„ÇÃñ∂", "Mist of Frailness")
	skilldesc(SKILL_SPELL_MIST_OF_FRAILNESS) = ""
	skillencdesc(SKILL_SPELL_MIST_OF_FRAILNESS) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ELEMENT_SCAR) = SKILL_ATTR_MAG, STARTING_SKILL_TYPE_BUFF + BUFF_ELEMENT_SCAR, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 600
	skillname(SKILL_SPELL_ELEMENT_SCAR) = lang("å≥ëfÇÃèùê’", "Element Scar")
	skilldesc(SKILL_SPELL_ELEMENT_SCAR) = ""
	skillencdesc(SKILL_SPELL_ELEMENT_SCAR) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HOLY_VEIL) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_HOLY_VEIL, 20, TARGET_TYPE_SELF_ONLY, 900
	skillname(SKILL_SPELL_HOLY_VEIL) = lang("ÉzÅ[ÉäÅ[ÉîÉFÉCÉã", "Holy Veil")
	skilldesc(SKILL_SPELL_HOLY_VEIL) = ""
	skillencdesc(SKILL_SPELL_HOLY_VEIL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_NIGHTMARE) = SKILL_ATTR_PER, STARTING_SKILL_TYPE_BUFF + BUFF_NIGHTMARE, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPELL_NIGHTMARE) = lang("ÉiÉCÉgÉÅÉA", "Nightmare")
	skilldesc(SKILL_SPELL_NIGHTMARE) = ""
	skillencdesc(SKILL_SPELL_NIGHTMARE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_DIVINE_WISDOM) = SKILL_ATTR_LER, STARTING_SKILL_TYPE_BUFF + BUFF_DIVINE_WISDOM, 22, TARGET_TYPE_SELF_ONLY, 350
	skillname(SKILL_SPELL_DIVINE_WISDOM) = lang("ímé“ÇÃâ¡åÏ", "Divine Wisdom")
	skilldesc(SKILL_SPELL_DIVINE_WISDOM) = ""
	skillencdesc(SKILL_SPELL_DIVINE_WISDOM) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MUTATION) = SKILL_ATTR_PER, SKILL_TYPE_SP, 21, TARGET_TYPE_SELF, 2250
	skillname(SKILL_SPELL_MUTATION) = lang("é©å»ÇÃïœóe", "Mutation")
	skilldesc(SKILL_SPELL_MUTATION) = lang("à·Ç§é©ï™Ç…Ç»ÇÈ", "Mutate self")
	skillencdesc(SKILL_SPELL_MUTATION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ACID_GROUND) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 18, TARGET_TYPE_LOCATION, 480
	skillname(SKILL_SPELL_ACID_GROUND) = lang("é_ÇÃäC", "Acid Ground")
	skilldesc(SKILL_SPELL_ACID_GROUND) = lang("é_ÇÃî≠ê∂", "Create acid grounds")
	skillencdesc(SKILL_SPELL_ACID_GROUND) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_FIRE_WALL) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 24, TARGET_TYPE_LOCATION, 640
	skillname(SKILL_SPELL_FIRE_WALL) = lang("âäÇÃï«", "Fire Wall")
	skilldesc(SKILL_SPELL_FIRE_WALL) = lang("âŒíåÇÃî≠ê∂", "Create fire grounds")
	skillencdesc(SKILL_SPELL_FIRE_WALL) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_DOOR_CREATION) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_LOCATION, 200
	skillname(SKILL_SPELL_DOOR_CREATION) = lang("ÉhÉAê∂ê¨", "Door Creation")
	skilldesc(SKILL_SPELL_DOOR_CREATION) = lang("ÉhÉAÇÃê∂ê¨", "Create doors")
	skillencdesc(SKILL_SPELL_DOOR_CREATION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_INCOGNITO) = SKILL_ATTR_PER, STARTING_SKILL_TYPE_BUFF + BUFF_INCOGNITO, 38, TARGET_TYPE_SELF_ONLY, 250
	skillname(SKILL_SPELL_INCOGNITO) = lang("ÉCÉìÉRÉOÉjÅ[Ég", "Incognito")
	skilldesc(SKILL_SPELL_INCOGNITO) = ""
	skillencdesc(SKILL_SPELL_INCOGNITO) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_FIRE_CLAW) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, 2000 + 6, 200
	skillname(SKILL_SPELL_FIRE_CLAW) = lang("âŒâäÇÃí‹", "Fire Claw")
	skilldesc(SKILL_SPELL_FIRE_CLAW) = lang("âŒâäëÆê´ÇÃñÓ", "Target(Fire)")
	skillencdesc(SKILL_SPELL_FIRE_CLAW) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_COLD_BLADE) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, 2000 + 6, 200
	skillname(SKILL_SPELL_COLD_BLADE) = lang("ó‚ãCÇÃên", "Cold Blade")
	skilldesc(SKILL_SPELL_COLD_BLADE) = lang("ó‚ãCëÆê´ÇÃñÓ", "Target(Cold)")
	skillencdesc(SKILL_SPELL_COLD_BLADE) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_LIGHTNING_SPEAR) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, 2000 + 6, 200
	skillname(SKILL_SPELL_LIGHTNING_SPEAR) = lang("ìdåÇÇÃëÑ", "Lightning Spear")
	skilldesc(SKILL_SPELL_LIGHTNING_SPEAR) = lang("ìdåÇëÆê´ÇÃñÓ", "Target(Lightning)")
	skillencdesc(SKILL_SPELL_LIGHTNING_SPEAR) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MIND_THORN) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, 2000 + 6, 300
	skillname(SKILL_SPELL_MIND_THORN) = lang("å∂òfÇÃûô", "Mind Thorn")
	skilldesc(SKILL_SPELL_MIND_THORN) = lang("å∂òfëÆê´ÇÃñÓ", "Target(Mind)")
	skillencdesc(SKILL_SPELL_MIND_THORN) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_POISON_MUCUS) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, 2000 + 6, 300
	skillname(SKILL_SPELL_POISON_MUCUS) = lang("ì≈ÇÃîSât", "Poison Mucus")
	skilldesc(SKILL_SPELL_POISON_MUCUS) = lang("ì≈ëÆê´ÇÃñÓ", "Target(Poison)")
	skillencdesc(SKILL_SPELL_POISON_MUCUS) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SOUND_CANNONBALL) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 7, 2000 + 6, 300
	skillname(SKILL_SPELL_SOUND_CANNONBALL) = lang("âπÇÃñCíe", "Sound Cannonball")
	skilldesc(SKILL_SPELL_SOUND_CANNONBALL) = lang("âπëÆê´ÇÃñÓ", "Target(Sound)")
	skillencdesc(SKILL_SPELL_SOUND_CANNONBALL) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_HYDRO_FANG) = SKILL_ATTR_MAG, SKILL_TYPE_ARROW, 5, 2000 + 6, 400
	skillname(SKILL_SPELL_HYDRO_FANG) = lang("êÖÇÃâÂ", "Hydro Fang")
	skilldesc(SKILL_SPELL_HYDRO_FANG) = lang("PVDVëÆê´ÇÃñÓ", "Target(PVDV)")
	skillencdesc(SKILL_SPELL_HYDRO_FANG) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CRYSTAL_SPEAR) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 20, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 300
	skillname(SKILL_SPELL_CRYSTAL_SPEAR) = lang("É}ÉWÉbÉNÉ{ÉãÉg", "Magic Bolt")
	skilldesc(SKILL_SPELL_CRYSTAL_SPEAR) = lang("ñÇñ@ëÆê´ÇÃÉ{ÉãÉg", "Line(Magic)")
	skillencdesc(SKILL_SPELL_CRYSTAL_SPEAR) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MAGIC_STORM) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 40, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPELL_MAGIC_STORM) = lang("ñÇóÕÇÃóí", "Magic Storm")
	skilldesc(SKILL_SPELL_MAGIC_STORM) = lang("îÕàÕçUåÇÅEñÇñ@", "Surround(Magic)")
	skillencdesc(SKILL_SPELL_MAGIC_STORM) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_RESURRECTION) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 60, TARGET_TYPE_SELF_ONLY, 1650
	skillname(SKILL_SPELL_RESURRECTION) = lang("ïúäà", "Resurrection")
	skilldesc(SKILL_SPELL_RESURRECTION) = lang("éÄé“ÇÃëhê∂", "Resurrect dead")
	skillencdesc(SKILL_SPELL_RESURRECTION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CONTINGENCY) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_CONTINGENCY, 25, TARGET_TYPE_SELF, 1250
	skillname(SKILL_SPELL_CONTINGENCY) = lang("å_ñÒ", "Contingency")
	skilldesc(SKILL_SPELL_CONTINGENCY) = ""
	skillencdesc(SKILL_SPELL_CONTINGENCY) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_4DIM_POCKET) = SKILL_ATTR_PER, SKILL_TYPE_SP, 60, TARGET_TYPE_SELF_ONLY, 750
	skillname(SKILL_SPELL_4DIM_POCKET) = lang("éléüå≥É|ÉPÉbÉg", "4-Dimensional Pocket")
	skilldesc(SKILL_SPELL_4DIM_POCKET) = lang("éléüå≥ÇÃÉ|ÉPÉbÉgÇè¢ä´", "Summon 4-Dimensional Pocket")
	skillencdesc(SKILL_SPELL_4DIM_POCKET) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_WIZARDS_HARVEST) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 45, TARGET_TYPE_SELF_ONLY, 350
	skillname(SKILL_SPELL_WIZARDS_HARVEST) = lang("ñÇèpémÇÃé˚än", "Wizard's Harvest")
	skilldesc(SKILL_SPELL_WIZARDS_HARVEST) = lang("ÉâÉìÉ_ÉÄÇ»é˚än", "Random harvest")
	skillencdesc(SKILL_SPELL_WIZARDS_HARVEST) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_METEOR) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 220, TARGET_TYPE_SELF_ONLY, 1450
	skillname(SKILL_SPELL_METEOR) = lang("ÉÅÉeÉI", "Meteor")
	skilldesc(SKILL_SPELL_METEOR) = lang("ëSàÊçUåÇ", "Massive Attack")
	skillencdesc(SKILL_SPELL_METEOR) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_GRAVITY) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 24, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 750
	skillname(SKILL_SPELL_GRAVITY) = lang("ÉOÉâÉrÉeÉB", "Gravity")
	skilldesc(SKILL_SPELL_GRAVITY) = lang("èdóÕÇÃî≠ê∂", "Create gravity")
	skillencdesc(SKILL_SPELL_GRAVITY) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_SUMMON_SPIRIT) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 30, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPELL_SUMMON_SPIRIT) = lang("ê∏óÏè¢ä´", "Summon Spirit")
	skilldesc(SKILL_SPELL_SUMMON_SPIRIT) = lang("ê∏óÏÇè¢ä´Ç∑ÇÈ", "Summon spirit")
	skillencdesc(SKILL_SPELL_SUMMON_SPIRIT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_FEATHER) = SKILL_ATTR_DEX, STARTING_SKILL_TYPE_BUFF + BUFF_FEATHER, 8, TARGET_TYPE_SELF, 150
	skillname(SKILL_SPELL_FEATHER) = lang("ÉtÉFÉUÅ[", "Feather")
	skilldesc(SKILL_SPELL_FEATHER) = lang("âÒîóÕã≠âªÅEïÇóV", "Enhanced Evasion/Floating")
	skillencdesc(SKILL_SPELL_FEATHER) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ECLIPSE) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 700
	skillname(SKILL_SPELL_ECLIPSE) = lang("åéêIÇÃüB", "Eclipse Jail")
	skilldesc(SKILL_SPELL_ECLIPSE) = lang("à√çïëÆê´ÇÃîÕàÕçUåÇ", "Surround(Darkness)")
	skillencdesc(SKILL_SPELL_ECLIPSE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_THUNDER_VORTEX) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 600
	skillname(SKILL_SPELL_THUNDER_VORTEX) = lang("óãËªÇÃâQ", "Thunder Vortex")
	skilldesc(SKILL_SPELL_THUNDER_VORTEX) = lang("ìdåÇëÆê´ÇÃîÕàÕçUåÇ", "Surround(Lightning)")
	skillencdesc(SKILL_SPELL_THUNDER_VORTEX) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_NETHER_WAVE) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 700
	skillname(SKILL_SPELL_NETHER_WAVE) = lang("ñªâ§ÇÃôÙöK", "Nether Roar")
	skilldesc(SKILL_SPELL_NETHER_WAVE) = lang("ínçñëÆê´ÇÃîÕàÕçUåÇ", "Surround(Nether)")
	skillencdesc(SKILL_SPELL_NETHER_WAVE) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MIST_OF_DAZZLING) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 12, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 320
	skillname(SKILL_SPELL_MIST_OF_DAZZLING) = lang("åıÇÃñ∂", "Mist of Dazzling")
	skilldesc(SKILL_SPELL_MIST_OF_DAZZLING) = lang("·øÇ¢ñ∂ÇÃî≠ê∂", "Create mist")
	skillencdesc(SKILL_SPELL_MIST_OF_DAZZLING) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_POISON_STORM) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 700
	skillname(SKILL_SPELL_POISON_STORM) = lang("ñ“ì≈ÇÃóí", "Poison Storm")
	skilldesc(SKILL_SPELL_POISON_STORM) = lang("ì≈ëÆê´ÇÃîÕàÕçUåÇ", "Surround(Poison)")
	skillencdesc(SKILL_SPELL_POISON_STORM) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ILLUSION_ROAR) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, 3000 + 2, 700
	skillname(SKILL_SPELL_ILLUSION_ROAR) = lang("ñ≤å∂ÇÃôÙöK", "Illusion Roar")
	skilldesc(SKILL_SPELL_ILLUSION_ROAR) = lang("å∂òfëÆê´ÇÃîÕàÕçUåÇ", "Surround(Mind)")
	skillencdesc(SKILL_SPELL_ILLUSION_ROAR) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_ANGUISH_JAIL) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 56, 3000 + 2, 700
	skillname(SKILL_SPELL_ANGUISH_JAIL) = lang("ãÍñ„ÇÃüB", "Anguish Jail")
	skilldesc(SKILL_SPELL_ANGUISH_JAIL) = lang("ê_åoëÆê´ÇÃîÕàÕçUåÇ", "Surround(Nerve)")
	skillencdesc(SKILL_SPELL_ANGUISH_JAIL) = lang("", "")

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_CONCENTRATION) = SKILL_ATTR_PER, STARTING_SKILL_TYPE_BUFF + BUFF_CONCENTRATION, 12, TARGET_TYPE_SELF, 100
	skillname(SKILL_SPELL_CONCENTRATION) = lang("èWíÜ", "Concentration")
	skilldesc(SKILL_SPELL_CONCENTRATION) = ""
	skillencdesc(SKILL_SPELL_CONCENTRATION) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_WATER_BOLT) = SKILL_ATTR_MAG, SKILL_TYPE_BOLT, 20, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 600
	skillname(SKILL_SPELL_WATER_BOLT) = lang("ÉnÉCÉhÉçÉ{ÉãÉg", "Hydro Bolt")
	skilldesc(SKILL_SPELL_WATER_BOLT) = lang("PVDVëÆê´ÇÃÉ{ÉãÉg", "Line(PVDV)")
	skillencdesc(SKILL_SPELL_WATER_BOLT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_BUBBLE_STORM) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 40, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 800
	skillname(SKILL_SPELL_BUBBLE_STORM) = lang("ñAñóÇÃóí", "Bubble Storm")
	skilldesc(SKILL_SPELL_BUBBLE_STORM) = lang("PVDVëÆê´ÇÃîÕàÕçUåÇ", "Surround(PVDV)")
	skillencdesc(SKILL_SPELL_BUBBLE_STORM) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPELL_GEM_POWER) = SKILL_ATTR_CON, STARTING_SKILL_TYPE_BUFF + BUFF_GEM_POWER, 12, TARGET_TYPE_SELF, 120
	skillname(SKILL_SPELL_GEM_POWER) = lang("éÁåÏêŒ", "Gem Power")
	skilldesc(SKILL_SPELL_GEM_POWER) = ""
	skillencdesc(SKILL_SPELL_GEM_POWER) = ""

	// Special actions
	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DRAIN_BLOOD) = SKILL_ATTR_DEX, SKILL_TYPE_HAND, 7, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_DRAIN_BLOOD) = lang("ãzååÇÃâÂ", "Drain Blood")
	skilldesc(SKILL_SPACT_DRAIN_BLOOD) = lang("ëÃóÕÅEspãzé˚", "Drain HP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FIRE_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_FIRE_BREATH) = lang("âŒâäï˙éÀ", "Fire Breath")
	skilldesc(SKILL_SPACT_FIRE_BREATH) = lang("âäëÆê´ÇÃï˙éÀçUåÇ", "Breath(Fire)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_COLD_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_COLD_BREATH) = lang("ó‚ãCï˙éÀ", "Cold Breath")
	skilldesc(SKILL_SPACT_COLD_BREATH) = lang("ó‚ãCëÆê´ÇÃï˙éÀçUåÇ", "Breath(Cold)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LIGHTNING_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_LIGHTNING_BREATH) = lang("ìdåÇï˙éÀ", "Lightning Breath")
	skilldesc(SKILL_SPACT_LIGHTNING_BREATH) = lang("ìdåÇëÆê´ÇÃï˙éÀçUåÇ", "Breath(Lightning)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DARKNESS_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_DARKNESS_BREATH) = lang("à√çïï˙éÀ", "Darkness Breath")
	skilldesc(SKILL_SPACT_DARKNESS_BREATH) = lang("à√çïëÆê´ÇÃï˙éÀçUåÇ", "Breath(Darkness)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CHAOS_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_CHAOS_BREATH) = lang("ç¨ì◊ï˙éÀ", "Chaos Breath")
	skilldesc(SKILL_SPACT_CHAOS_BREATH) = lang("ç¨ì◊ëÆê´ÇÃï˙éÀçUåÇ", "Breath(Chaos)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SOUND_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_SOUND_BREATH) = lang("çåâπï˙éÀ", "Sound Breath")
	skilldesc(SKILL_SPACT_SOUND_BREATH) = lang("âπëÆê´ÇÃï˙éÀçUåÇ", "Breath(Sound)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_NETHER_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_NETHER_BREATH) = lang("ñªãCï˙éÀ", "Nether Breath")
	skilldesc(SKILL_SPACT_NETHER_BREATH) = lang("ínçñëÆê´ÇÃï˙éÀçUåÇ", "Breath(Nether)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_NERVE_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_NERVE_BREATH) = lang("ê_åoîgï˙éÀ", "Nerve Breath")
	skilldesc(SKILL_SPACT_NERVE_BREATH) = lang("ê_åoëÆê´ÇÃï˙éÀçUåÇ", "Breath(Nerve)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_POISON_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_POISON_BREATH) = lang("ñ“ì≈ï˙éÀ", "Poison Breath")
	skilldesc(SKILL_SPACT_POISON_BREATH) = lang("ì≈ëÆê´ÇÃï˙éÀçUåÇ", "Breath(Poison)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MIND_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_MIND_BREATH) = lang("å∂âeï˙éÀ", "Mind Breath")
	skilldesc(SKILL_SPACT_MIND_BREATH) = lang("å∂òfëÆê´ÇÃï˙éÀçUåÇ", "Breath(Mind)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_POWER_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_BREATH, 5, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_POWER_BREATH) = lang("ÉGÉlÉãÉMÅ[ï˙éÀ", "Power Breath")
	skilldesc(SKILL_SPACT_POWER_BREATH) = lang("ñÇñ@ëÆê´ÇÃï˙éÀçUåÇ", "Breath")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_WEAKNESS) = SKILL_ATTR_MAG, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TOUCH_OF_WEAKNESS) = lang("é„ëÃâªÇÃéË", "Touch of Weakness")
	skilldesc(SKILL_SPACT_TOUCH_OF_WEAKNESS) = lang("é„ëÃâª", "Weaken target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_HUNGER) = SKILL_ATTR_MAG, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TOUCH_OF_HUNGER) = lang("ãQâÏÇÃéË", "Touch of Hunger")
	skilldesc(SKILL_SPACT_TOUCH_OF_HUNGER) = lang("ãQâÏçUåÇ", "Starve target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_POISON) = SKILL_ATTR_DEX, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TOUCH_OF_POISON) = lang("ì≈ÇÃéË", "Touch of Poison")
	skilldesc(SKILL_SPACT_TOUCH_OF_POISON) = lang("ì≈çUåÇ", "Poison target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_NERVE) = SKILL_ATTR_DEX, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TOUCH_OF_NERVE) = lang("ñÉ·ÉÇÃéË", "Touch of Nerve")
	skilldesc(SKILL_SPACT_TOUCH_OF_NERVE) = lang("ê_åoçUåÇ", "Paralyze target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_FEAR) = SKILL_ATTR_WIL, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TOUCH_OF_FEAR) = lang("ã∞ï|ÇÃéË", "Touch of Fear")
	skilldesc(SKILL_SPACT_TOUCH_OF_FEAR) = lang("ñ≥ëÆê´çUåÇ", "Fear target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_SLEEP) = SKILL_ATTR_WIL, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TOUCH_OF_SLEEP) = lang("ñ∞ÇËÇÃéË", "Touch of Sleep")
	skilldesc(SKILL_SPACT_TOUCH_OF_SLEEP) = lang("ê∏ê_çUåÇ", "Sleep target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHADOW_STEP) = SKILL_ATTR_WIL, SKILL_TYPE_TELEPORT, 27, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_SHADOW_STEP) = lang("ÉVÉÉÉhÉEÉXÉeÉbÉv", "Shadow Step")
	skilldesc(SKILL_SPACT_SHADOW_STEP) = lang("ëŒè€Ç÷ìÀåÇÅ{í èÌãﬂê⁄çUåÇ", "Teleport to target + Melee attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DRAW_SHADOW) = SKILL_ATTR_WIL, SKILL_TYPE_TELEPORT, 10, TARGET_TYPE_OTHER + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_DRAW_SHADOW) = lang("àŸéüå≥ÇÃéË", "Draw Shadow")
	skilldesc(SKILL_SPACT_DRAW_SHADOW) = lang("ëŒè€Çà¯Ç´äÒÇπ", "Draw target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HARVEST_MANA) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 700
	skillname(SKILL_SPACT_HARVEST_MANA) = lang("É}ÉiâÒïú", "Harvest Mana")
	skilldesc(SKILL_SPACT_HARVEST_MANA) = lang("É}ÉiâÒïú", "Restore MP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PUNISHMENT) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_PUNISHMENT, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PUNISHMENT) = lang("ê_î±", "Punishment")
	skilldesc(SKILL_SPACT_PUNISHMENT) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PRAYER_OF_JURE) = SKILL_ATTR_WIL, SKILL_TYPE_HEAL, 30, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_PRAYER_OF_JURE) = lang("ÉWÉÖÉAÇÃãFÇË", "Prayer of Jure")
	skilldesc(SKILL_SPACT_PRAYER_OF_JURE) = lang("ëÃóÕâÒïú", "Heal HP self")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ABSORB_MAGIC) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 25, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_ABSORB_MAGIC) = lang("ñÇóÕÇÃãzé˚", "Absorb Magic")
	skilldesc(SKILL_SPACT_ABSORB_MAGIC) = lang("É}ÉiâÒïú", "Heal MP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LULWYS_TRICK) = SKILL_ATTR_DEX, STARTING_SKILL_TYPE_BUFF + BUFF_LULWYS_TRICK, 20, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_LULWYS_TRICK) = lang("ÉãÉãÉEÉBÇÃúﬂàÀ", "Lulwy's Trick")
	skilldesc(SKILL_SPACT_LULWYS_TRICK) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PSYCHOANALYSIS) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_PSYCHOANALYSIS) = lang("ê∏ê_ï™êÕ", "Psychoanalysis")
	skilldesc(SKILL_SPACT_PSYCHOANALYSIS) = lang("ëŒè€ÇÃê∏ê_èÛë‘ÇÃä¥ím", "Know mind")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DIMENSIONAL_MOVE) = SKILL_ATTR_WIL, SKILL_TYPE_TELEPORT, 15, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_DIMENSIONAL_MOVE) = lang("ãÛä‘òcã»", "Dimensional Move")
	skilldesc(SKILL_SPACT_DIMENSIONAL_MOVE) = lang("ãﬂÇ≠Ç÷ÇÃèuä‘à⁄ìÆ", "Teleport self")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CHANGE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_CHANGE) = lang("ëºé“ïœóe", "Change")
	skilldesc(SKILL_SPACT_CHANGE) = lang("ëŒè€ïœóe", "Change target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DRAW_CHARGE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_DRAW_CHARGE) = lang("ñÇóÕÇÃíäèo", "Draw Charge")
	skilldesc(SKILL_SPACT_DRAW_CHARGE) = lang("èÒÇ©ÇÁñÇóÕíäèo", "Draw charges")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FILL_CHARGE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_FILL_CHARGE) = lang("ñÇóÕÇÃè[ìU", "Fill Charge")
	skilldesc(SKILL_SPACT_FILL_CHARGE) = lang("è[ìU", "Restore charges")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SWARM) = SKILL_ATTR_STR, SKILL_TYPE_SP, 27, TARGET_TYPE_SELF_ONLY, 220
	skillname(SKILL_SPACT_SWARM) = lang("ÉXÉEÉHÅ[ÉÄ", "Swarm")
	skilldesc(SKILL_SPACT_SWARM) = lang("ó◊ê⁄ëŒè€í èÌãﬂê⁄çUåÇ", "Attack circle")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_MUTATION) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_MUTATION) = lang("ïœóeÇÃä·ç∑Çµ", "Eye of Mutation")
	skilldesc(SKILL_SPACT_EYE_OF_MUTATION) = lang("ëŒè€ïœóe", "Mutate target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_ETHER) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_ETHER) = lang("ÉGÅ[ÉeÉãÇÃä·ç∑Çµ", "Eye of Ether")
	skilldesc(SKILL_SPACT_EYE_OF_ETHER) = lang("ëŒè€ÉGÅ[ÉeÉãêNêH", "Corrupt target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ETHER_GROUND) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 18, TARGET_TYPE_LOCATION, 480
	skillname(SKILL_SPACT_ETHER_GROUND) = lang("ÉGÅ[ÉeÉãÇÃäC", "Ether Ground")
	skilldesc(SKILL_SPACT_ETHER_GROUND) = lang("ÉGÅ[ÉeÉãÇÃî≠ê∂", "Create ether grounds")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUSPICIOUS_HAND) = SKILL_ATTR_DEX, SKILL_TYPE_TELEPORT, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_SUSPICIOUS_HAND) = lang("ÉXÉäÇÃéw", "Suspicious Hand")
	skilldesc(SKILL_SPACT_SUSPICIOUS_HAND) = lang("ìêÇ›", "Steal from target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_INSANITY) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_INSANITY) = lang("ã∂ãCÇÃä·ç∑Çµ", "Eye of Insanity")
	skilldesc(SKILL_SPACT_EYE_OF_INSANITY) = lang("ëŒè€ã∂ãC", "Craze target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_RAIN_OF_SANITY) = SKILL_ATTR_WIL, SKILL_TYPE_BALL, 50, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPACT_RAIN_OF_SANITY) = lang("ã∂ãCé°ñ¸ÇÃâJ", "Rain of Sanity")
	skilldesc(SKILL_SPACT_RAIN_OF_SANITY) = lang("ã∂ãCâÒïúÇÃãÖ", "Cure insane area")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_DIMNESS) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_DIMNESS) = lang("ûNûOÇÃä·ç∑Çµ", "Eye of Dimness")
	skilldesc(SKILL_SPACT_EYE_OF_DIMNESS) = lang("ëŒè€ûNûO", "Dim target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUMMON_CATS) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_SUMMON_CATS) = lang("îLè¢ä´", "Summon Cats")
	skilldesc(SKILL_SPACT_SUMMON_CATS) = lang("îLÇè¢ä´Ç∑ÇÈ", "Summon cats")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUMMON_YEEK) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_SUMMON_YEEK) = lang("ÉCÅ[ÉNè¢ä´", "Summon Yeek")
	skilldesc(SKILL_SPACT_SUMMON_YEEK) = lang("ÉCÅ[ÉNÇè¢ä´Ç∑ÇÈ", "Summon Yeeks")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUMMON_PAWN) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_SUMMON_PAWN) = lang("ãÓè¢ä´", "Summon Pawn")
	skilldesc(SKILL_SPACT_SUMMON_PAWN) = lang("ãÓÇè¢ä´Ç∑ÇÈ", "Summon pieces")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUMMON_FIRE) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_SUMMON_FIRE) = lang("âäè¢ä´", "Summon Fire")
	skilldesc(SKILL_SPACT_SUMMON_FIRE) = lang("âäÇÃê∂Ç´ï®Çè¢ä´Ç∑ÇÈ", "Summon fire creatures")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUMMON_SISTER) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_SUMMON_SISTER) = lang("ñÖè¢ä´", "Summon Sister")
	skilldesc(SKILL_SPACT_SUMMON_SISTER) = lang("ñÖÇè¢ä´Ç∑ÇÈ", "Summon Sister")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUICIDE_ATTACK) = SKILL_ATTR_CON, SKILL_TYPE_BALL, 16, TARGET_TYPE_DIRECTION, 450
	skillname(SKILL_SPACT_SUICIDE_ATTACK) = lang("é©îö", "Suicide Attack")
	skilldesc(SKILL_SPACT_SUICIDE_ATTACK) = lang("PVDVëÆê´ÇÃîÕàÕçUåÇ", "Suicide(PVDV)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CURSE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 4, 100
	skillname(SKILL_SPACT_CURSE) = lang("éÙÇ¢ÇÃåæót", "Curse")
	skilldesc(SKILL_SPACT_CURSE) = lang("éÙÇ¢ÇÇ©ÇØÇÈ", "Curse target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DEATH_WORD) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_DEATH_WORD, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_DEATH_WORD) = lang("éÄÇÃêÈçê", "Death Word")
	skilldesc(SKILL_SPACT_DEATH_WORD) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BOOST) = SKILL_ATTR_WIL, STARTING_SKILL_TYPE_BUFF + BUFF_BOOST, 50, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_BOOST) = lang("ÉuÅ[ÉXÉg", "Boost")
	skilldesc(SKILL_SPACT_BOOST) = ""

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_INSULT) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 4, 0
	skillname(SKILL_SPACT_INSULT) = lang("îlì|", "Insult")
	skilldesc(SKILL_SPACT_INSULT) = lang("ëŒè€ûNûO", "Insult target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHINING_WAVE) = SKILL_ATTR_STR, SKILL_TYPE_SP, 27, TARGET_TYPE_ENEMY + 4, 0
	skillname(SKILL_SPACT_SHINING_WAVE) = lang("è’åÇîgìÆ", "Shining Wave")
	skilldesc(SKILL_SPACT_SHINING_WAVE) = lang("àÍíºê¸çUåÇ", "Line attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DISTANT_ATTACK7) = SKILL_ATTR_STR, SKILL_TYPE_ATTACK, 2, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_DISTANT_ATTACK7) = lang("âìãóó£ë≈åÇÇV", "Distant Attack 7")
	skilldesc(SKILL_SPACT_DISTANT_ATTACK7) = lang("óLéÀíˆ/í èÌãﬂê⁄çUåÇ", "Distant Attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SCAVENGE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_SCAVENGE) = lang("êHÇ¢ãôÇË", "Scavenge")
	skilldesc(SKILL_SPACT_SCAVENGE) = lang("ìêÇÒÇ≈êHÇ◊ÇÈ", "Steal food")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_MANA) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_MANA) = lang("É}ÉiÇÃä·ç∑Çµ", "Eye of Mana")
	skilldesc(SKILL_SPACT_EYE_OF_MANA) = lang("É}ÉiÉ_ÉÅÅ[ÉW", "Damage MP target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VANISH) = SKILL_ATTR_PER, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_VANISH) = lang("ëﬁãp", "Vanish")
	skilldesc(SKILL_SPACT_VANISH) = lang("ëﬁãpÇ∑ÇÈ", "Retreat")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PREGNANT) = SKILL_ATTR_PER, SKILL_TYPE_SP, 15, TARGET_TYPE_ENEMY + 1, 0
	skillname(SKILL_SPACT_PREGNANT) = lang("îDêP", "Pregnant")
	skilldesc(SKILL_SPACT_PREGNANT) = lang("ëŒè€îDêP", "Pregnant target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GRENADE) = SKILL_ATTR_MAG, SKILL_TYPE_BALL, 18, TARGET_TYPE_SELF_ONLY, 700
	skillname(SKILL_SPACT_GRENADE) = lang("ÉOÉåÉlÅ[Éh", "Grenade")
	skilldesc(SKILL_SPACT_GRENADE) = lang("çåâπÇÃãÖ", "Surround(Sound)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CHEER) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 32, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_CHEER) = lang("å€ïë", "Cheer")
	skilldesc(SKILL_SPACT_CHEER) = lang("éãäEì‡íáä‘ã≠âª", "Strengthen allies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MEWMEWMEW) = SKILL_ATTR_LUC, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF, 500
	skillname(SKILL_SPACT_MEWMEWMEW) = lang("Ç§Ç›Ç›Ç·ÇüÅI", "Mewmewmew!")
	skilldesc(SKILL_SPACT_MEWMEWMEW) = lang("ëSëÃçÇÉ_ÉÅÅ[ÉW", "Map-wide high damage")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DECAPITATION) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 1, 0
	skillname(SKILL_SPACT_DECAPITATION) = lang("éÒéÎÇË", "Decapitation")
	skilldesc(SKILL_SPACT_DECAPITATION) = lang("äÌópàÀë∂çUåÇ/ëŒè€Ç™ïméÄÇ»ÇÁë¶éÄ", "Attack and kill low-health target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DROP_MINE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_DROP_MINE) = lang("ínóãìäâ∫", "Drop Mine")
	skilldesc(SKILL_SPACT_DROP_MINE) = lang("ë´å≥Ç…ínóãê›íu", "Set Mine")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MANIS_DISASSEMBLY) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_MANIS_DISASSEMBLY) = lang("É}ÉjÇÃï™âèp", "Mani's Disassembly")
	skilldesc(SKILL_SPACT_MANIS_DISASSEMBLY) = lang("ìGïméÄ", "Almost kill target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_INSANE_WAVE) = SKILL_ATTR_LER, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF, 500
	skillname(SKILL_SPACT_INSANE_WAVE) = lang("ïaà§îgìÆ", "Insane Wave")
	skilldesc(SKILL_SPACT_INSANE_WAVE) = lang("ëSëÃî≠ã∂", "Map-wide insanity")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUPER_VIBRATING_FIST) = SKILL_ATTR_STR, SKILL_TYPE_SP, 1, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPACT_SUPER_VIBRATING_FIST) = lang("í¥êUìÆåù", "Super Vibrating Fist")
	skilldesc(SKILL_SPACT_SUPER_VIBRATING_FIST) = lang("í¥à–óÕíPëÃçUåÇ", "Hyper strong individual attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TEMPEST_ARROW) = SKILL_ATTR_DEX, SKILL_TYPE_SUMMON, 1, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_TEMPEST_ARROW) = lang("óíÇÃó¨ñ@", "Tempest Arrow")
	skilldesc(SKILL_SPACT_TEMPEST_ARROW) = lang("ó≥ä™è¢ä´", "Summon tornado")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EXCESSIVE_HEAL) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 1, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPACT_EXCESSIVE_HEAL) = lang("ëMâÿóÙåı", "Excessive Heal")
	skilldesc(SKILL_SPACT_EXCESSIVE_HEAL) = lang("ëÂó èoååÇ≥ÇπÇÈ", "Mass bleeding")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHINE_SNAIL) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 100, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPACT_SHINE_SNAIL) = lang("ÉVÉÉÉCÉìÉXÉlÉCÉã", "Shine Snail")
	skilldesc(SKILL_SPACT_SHINE_SNAIL) = lang("íPëÃçUåÇ", "Individual attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HOUZANHA) = SKILL_ATTR_CON, SKILL_TYPE_SP, 32, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_HOUZANHA) = lang("ìyó≥óêïë", "Houzanha")
	skilldesc(SKILL_SPACT_HOUZANHA) = lang("çLàÊínå`îjâÛ", "Wide terrain destruction")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MANA_BURST) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 50, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_MANA_BURST) = lang("É}ÉiÇÃâï˙", "Mana Burst")
	skilldesc(SKILL_SPACT_MANA_BURST) = lang("MPè¡îÔîÕàÕçUåÇ", "Burn MP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ELEMENTIA) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 500
	skillname(SKILL_SPACT_ELEMENTIA) = lang("ÉGÉåÉÅÉìÉeÉBÉA", "Elementia")
	skilldesc(SKILL_SPACT_ELEMENTIA) = lang("íPëÃí¥É}ÉiÉ_ÉÅÅ[ÉW", "Mana drain attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_RAMPAGE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_RAMPAGE) = lang("ÉâÉìÉyÅ[ÉW", "Rampage")
	skilldesc(SKILL_SPACT_RAMPAGE) = lang("éãäEì‡ÇÃíáä‘ã∂ñ\âª", "Increase damage")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GOLD_RUSH) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_GOLD_RUSH) = lang("ÉSÅ[ÉãÉhÉâÉbÉVÉÖ", "Gold Rush")
	skilldesc(SKILL_SPACT_GOLD_RUSH) = lang("í¥ã≠âª", "Super strength")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SYNCHRO_HEARTS) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 100, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_SYNCHRO_HEARTS) = lang("ç∞ÇÃÉVÉìÉNÉç", "Synchro Hearts")
	skilldesc(SKILL_SPACT_SYNCHRO_HEARTS) = lang("çDä¥ìxàÀë∂íáä‘ã≠âª", "Strengthen allies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MAGIC_KISS) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 2, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_MAGIC_KISS) = lang("ñÇñ@ÇÃå˚Ç√ÇØ", "Magic Kiss")
	skilldesc(SKILL_SPACT_MAGIC_KISS) = lang("É}Éiãzé˚Ç†ÇÈÇ¢ÇÕÉ}Éiï™è˜", "Heal mana")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CLEAR_MIND) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 22, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_CLEAR_MIND) = lang("ñæãæé~êÖ", "Clear Mind")
	skilldesc(SKILL_SPACT_CLEAR_MIND) = lang("éÂî\óÕÇ∆âÒîóÕÇ™è„è∏", "Strengthens WIL and PER")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PRESSURE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PRESSURE) = lang("ÉvÉåÉbÉVÉÉÅ[", "Pressure")
	skilldesc(SKILL_SPACT_PRESSURE) = lang("MPè¡îÔÇµé¸àÕÇÃìGÇÃÉQÅ[ÉW-50Åì", "Reduce power gauge of surrounding enemies.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUMMON_CHAOS) = SKILL_ATTR_MAG, SKILL_TYPE_SUMMON, 30, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 200
	skillname(SKILL_SPACT_SUMMON_CHAOS) = lang("·≈ëÆè¢ä´", "Summon Chaos")
	skilldesc(SKILL_SPACT_SUMMON_CHAOS) = lang("·≈ëÆÇè¢ä´Ç∑ÇÈ", "Summon chaos")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ENSEMBLE) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 45, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_ENSEMBLE) = lang("ÉAÉìÉTÉìÉuÉã", "Ensemble")
	skilldesc(SKILL_SPACT_ENSEMBLE) = lang("íáä‘Ç∆çáëtÅEçáè•Ç∑ÇÈ/éûä‘Ç©Ç©ÇÈ", "Ensemble")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUPER_REGEN) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 50, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_SUPER_REGEN) = lang("í¥çƒê∂", "Super Regen")
	skilldesc(SKILL_SPACT_SUPER_REGEN) = lang("é°ñ¸óÕí¥è„è∏", "?")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DIRECTIVE) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_DIRECTIVE) = lang("êÌèpéwé¶", "Directive")
	skilldesc(SKILL_SPACT_DIRECTIVE) = lang("íáä‘Ç…ë‘ê®Ç∆ì¡éÍíeéwé¶", "Switch battle mode")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PLATINUM_SONG) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 34, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PLATINUM_SONG) = lang("ÉvÉâÉ`ÉiÉ\ÉìÉO", "Platinum Song")
	skilldesc(SKILL_SPACT_PLATINUM_SONG) = lang("éãäEì‡íáä‘ã≠âª", "Strengthen allies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PROVOKE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PROVOKE) = lang("íßî≠", "Provoke")
	skilldesc(SKILL_SPACT_PROVOKE) = lang("é©ï™ÇÉ^Å[ÉQÉbÉgÇ…Ç≥ÇπÇÈ", "attract attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BIND) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_BIND) = lang("ë©îõ", "Bind")
	skilldesc(SKILL_SPACT_BIND) = lang("ëŒè€à⁄ìÆïsî\", "Targets becomes immobile")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BROWBEAT) = SKILL_ATTR_PER, SKILL_TYPE_SP, 20, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_BROWBEAT) = lang("à–äd", "Browbeat")
	skilldesc(SKILL_SPACT_BROWBEAT) = lang("ëŒè€ÇÃçUåÇóÕÇâ∫Ç∞ÇÈ", "Decreases target attack power")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_BRAINWASHING) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_BRAINWASHING) = lang("êÙî]ÇÃä·ç∑Çµ", "Eye of Brainwashing")
	skilldesc(SKILL_SPACT_EYE_OF_BRAINWASHING) = lang("PCÇèPÇÌÇπÇÈ", "control ally")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CALL_FAMILIAR) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 2, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_CALL_FAMILIAR) = lang("ÉRÅ[ÉãÉtÉ@É~ÉäÉA", "Call Familiar")
	skilldesc(SKILL_SPACT_CALL_FAMILIAR) = lang("éwíËÇµÇΩíáä‘ÇåƒÇ‘/ë“ã@Ç≥ÇπÇÈ", "Call Ally")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EXPLOSIVE_FIST) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_DIRECTION, 500
	skillname(SKILL_SPACT_EXPLOSIVE_FIST) = lang("îöóÙåù", "Explosive Fist")
	skilldesc(SKILL_SPACT_EXPLOSIVE_FIST) = lang("í èÌäiì¨çUåÇÅ{ÉOÉåÉlÅ[Éhî≠ìÆ", "Grenade martial")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CHARGE) = SKILL_ATTR_CON, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_CHARGE) = lang("É`ÉÉÅ[ÉW", "Charge")
	skilldesc(SKILL_SPACT_CHARGE) = lang("ó≠ÇﬂÇƒí èÌçUåÇ/ñÇñ@/ï˙éÀÇàÍìxã≠âª", "Strengthens Physical/Magical/Breath damage for one attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EMERGENCY_EVASION) = SKILL_ATTR_CON, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_EMERGENCY_EVASION) = lang("ãŸã}âÒî", "Emergency Evasion")
	skilldesc(SKILL_SPACT_EMERGENCY_EVASION) = lang("åyëïîıÇ»ÇÁÉNÉäÉeÉBÉJÉãñ≥å¯", "Prevent criticals if wearing light armor")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MAGIC_EQUIP) = SKILL_ATTR_CON, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_MAGIC_EQUIP) = lang("ñÇëï", "Magic Equip")
	skilldesc(SKILL_SPACT_MAGIC_EQUIP) = lang("íÜëïîıÇ»ÇÁñÇñ@à–óÕè„è∏", "Enhance magical power if wearing medium armor")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SUPER_ARMOR) = SKILL_ATTR_CON, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_SUPER_ARMOR) = lang("í¥èdëï", "Super Armor")
	skilldesc(SKILL_SPACT_SUPER_ARMOR) = lang("èdëïîıÇ»ÇÁëÂÉ_ÉÅÅ[ÉWÇåyå∏", "Enhance protection if wearing heavy armor")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DO_NOTHING) = SKILL_ATTR_CON, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_DO_NOTHING) = lang("âΩÇ‡ÇµÇ»Ç¢", "Do Nothing")
	skilldesc(SKILL_SPACT_DO_NOTHING) = lang("É^Å[ÉìèIóπ", "Turn End")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GRAVITY_SPHERE) = SKILL_ATTR_CON, SKILL_TYPE_SP, 8, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_GRAVITY_SPHERE) = lang("èdóÕãÖ", "Gravity Sphere")
	skilldesc(SKILL_SPACT_GRAVITY_SPHERE) = lang("äKëwàÀë∂É_ÉÅÅ[ÉW", "Gravity Damage")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ATTRIBUTE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 24, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_ATTRIBUTE) = lang("ÉAÉgÉäÉrÉEÉg", "Attribute")
	skilldesc(SKILL_SPACT_ATTRIBUTE) = lang("ëœê´Ç™ç≈Ç‡çÇÇ¢ëÆê´Çäiì¨Ç…ïtâ¡Ç∑ÇÈ", "Add attribute to martial")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_OVERLIMIT_THROW) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 5, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_OVERLIMIT_THROW) = lang("àÍìäì¸ç∞", "OverLimit-Throw")
	skilldesc(SKILL_SPACT_OVERLIMIT_THROW) = lang("·“ëzàÀë∂Ç≈í èÌìäù±ã≠âª/MPè¡îÔ", "Throwing reinforced with meditation/Uses MP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MOGRANIC_AURA) = SKILL_ATTR_CON, SKILL_TYPE_SP, 50, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_MOGRANIC_AURA) = lang("ìyó≥ì¨ãC", "Mogranic Aura")
	skilldesc(SKILL_SPACT_MOGRANIC_AURA) = lang("ñÇñ@ëœê´ëùâ¡/î≠ìÆéûï˙èoèÛë‘", "Magic Resist/Self-Emission")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FIRE_A_VOLLEY) = SKILL_ATTR_PER, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_FIRE_A_VOLLEY) = lang("àÍêƒéÀåÇ", "Fire a Volley")
	skilldesc(SKILL_SPACT_FIRE_A_VOLLEY) = lang("íáä‘Ç∆àÍêƒÇ…í èÌâìäuçUåÇ/ÉQÅ[ÉW50Åìè¡îÔ", "Party Shooting/Consumes 50% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ABSOLUTE_PROTECT) = SKILL_ATTR_CON, SKILL_TYPE_SP, 80, TARGET_TYPE_SELF, 500
	skillname(SKILL_SPACT_ABSOLUTE_PROTECT) = lang("ê‚ëŒñhâq", "Absolute protect")
	skilldesc(SKILL_SPACT_ABSOLUTE_PROTECT) = lang("íáä‘ÇÃÉ_ÉÅÅ[ÉWÇå®ë„ÇÌÇË", "Take over the damage of ally")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MEGID_FLAME) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 100, TARGET_TYPE_SELF, 700
	skillname(SKILL_SPACT_MEGID_FLAME) = lang("èƒÇØÇ¬Ç≠îgìÆ", "Megid Flame")
	skilldesc(SKILL_SPACT_MEGID_FLAME) = lang("èjïüÇèƒÇ´êsÇ≠Ç∑", "Buff Bunish")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FORCED_DRAFT) = SKILL_ATTR_STR, SKILL_TYPE_SP, 20, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_FORCED_DRAFT) = lang("ã≠êßòAçs", "Forced Draft")
	skilldesc(SKILL_SPACT_FORCED_DRAFT) = lang("òSçñÇ…ì¸ÇÍÇÈ", "Put in prison.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CONTINUOUS_ATTACKS) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + 3, 0
	skillname(SKILL_SPACT_CONTINUOUS_ATTACKS) = lang("çÇë¨ÉâÉbÉVÉÖ", "Continuous Attacks")
	skilldesc(SKILL_SPACT_CONTINUOUS_ATTACKS) = lang("òAë±í èÌãﬂê⁄çUåÇ/í«â¡å¯â ñ≥å¯", "Continuous attacks/added effects not applied")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VARIABLE_BREATH) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 10, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_VARIABLE_BREATH) = lang("â¬ïœï˙éÀ", "Variable Breath")
	skilldesc(SKILL_SPACT_VARIABLE_BREATH) = lang("ëœê´Ç…âûÇ∂ÇΩëÆê´Çï˙éÀ", "Breath(variable)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DIVINE_STREAM) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 100, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_DIVINE_STREAM) = lang("ê_ãCî≠èü", "Divine Stream")
	skilldesc(SKILL_SPACT_DIVINE_STREAM) = lang("ê_óÕÇÃâï˙", "Release God Power")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ZERO_SHOOT) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 15, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_ZERO_SHOOT) = lang("óÎÇÃä‘åÇ", "Zero Shoot")
	skilldesc(SKILL_SPACT_ZERO_SHOOT) = lang("ñ≥éÀíˆ/ãóó£ï‚ê≥ñΩíÜó¶è„è∏í èÌéÀåÇ", "Close proximity shot with increased hit rate")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_RUBBING) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 2, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_RUBBING) = lang("à§ïèÇÃéË", "Rubbing")
	skilldesc(SKILL_SPACT_RUBBING) = lang("ïèÇ≈Ç‹ÇÌÇ∑", "Rub npc")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FLASH_OF_SWIFTNESS) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_FLASH_OF_SWIFTNESS) = lang("ê_ë¨ÇÃàÍëM", "Flash of Swiftness")
	skilldesc(SKILL_SPACT_FLASH_OF_SWIFTNESS) = lang("ìGÉQÅ[ÉWîºå∏/ÉQÅ[ÉW100Åìè¡îÔ", "Rapid Slash")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_UNDERHAND_DROP) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_UNDERHAND_DROP) = lang("ãtéËóéÇ∆Çµ", "Underhand Drop")
	skilldesc(SKILL_SPACT_UNDERHAND_DROP) = lang("ã∞ï|Ç≥ÇπÇÈéhìÀ/ÉQÅ[ÉW100Åìè¡îÔ", "Piercing fear")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BISECTION) = SKILL_ATTR_STR, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_BISECTION) = lang("ëÂóÛíf", "Bisection")
	skilldesc(SKILL_SPACT_BISECTION) = lang("èoååÇ≥ÇπÇÈêÿíf/ÉQÅ[ÉW100Åìè¡îÔ", "Brute force")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PULVERIZATION) = SKILL_ATTR_STR, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_PULVERIZATION) = lang("ç‘ïˆÇµ", "Pulverization")
	skilldesc(SKILL_SPACT_PULVERIZATION) = lang("ñhå‰àÍéûìIÇ…â∫Ç∞ÇÈ/ÉQÅ[ÉW100Åìè¡îÔ", "Defense break")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PENETRATION) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_PENETRATION) = lang("ûOìÀÇ´", "Penetration")
	skilldesc(SKILL_SPACT_PENETRATION) = lang("ûNûOÇ∆Ç≥ÇπÇÈéhìÀ/ÉQÅ[ÉW100Åìè¡îÔ", "Thrust dim")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DANCE_OF_BLOW) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_DANCE_OF_BLOW) = lang("ì{ììÇÃòAåÇ", "Dance of Blow")
	skilldesc(SKILL_SPACT_DANCE_OF_BLOW) = lang("âÒîàÍéûìIÇ…â∫Ç∞ÇÈ/ÉQÅ[ÉW100Åìè¡îÔ", "Continuous attacks")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EXPLOSION) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_EXPLOSION) = lang("ç∞ÇÃàÍåÇ", "Explosion")
	skilldesc(SKILL_SPACT_EXPLOSION) = lang("è¡îÔå„15ÅìâÒïú/ÉQÅ[ÉW100Åìè¡îÔ", "Blaze Fighting spirit")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_QUICK_USE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_QUICK_USE) = lang("ÉpÉèÅ[ÉAÉCÉeÉÄ", "Power Item")
	skilldesc(SKILL_SPACT_QUICK_USE) = lang("àÍïîÉAÉCÉeÉÄégópã≠âª", "Enhances use items")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SQUEEZE) = SKILL_ATTR_STR, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_SQUEEZE) = lang("ÉXÉNÉCÅ[ÉY", "Squeeze")
	skilldesc(SKILL_SPACT_SQUEEZE) = lang("ïsíáí˜Çﬂè„Ç∞/óFçDï¯ói/â∆í{çÔì˚", "Hold enemy/Hug friend/milking livestock")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DISTURBANCE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_DISTURBANCE) = lang("ähóê", "Disturbance")
	skilldesc(SKILL_SPACT_DISTURBANCE) = lang("å›Ç¢ÇÃÉQÅ[ÉWÇå∏ÇÁÇ∑", "Decrease gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CUT_TREE) = SKILL_ATTR_STR, SKILL_TYPE_SP, 12, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_CUT_TREE) = lang("é˜ñÿÇÃî∞çÃ", "Cut Tree")
	skilldesc(SKILL_SPACT_CUT_TREE) = lang("î∞çÃÇµÇƒçﬁñÿÇ…Ç∑ÇÈ", "make tree material")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PREACHING) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PREACHING) = lang("ê‡ñ@", "Preaching")
	skilldesc(SKILL_SPACT_PREACHING) = lang("êMã¬ÇÃÇ†ÇËï˚Ç…Ç¬Ç¢ÇƒçlÇ¶ÇçLÇﬂÇÈ", "encourage conversion")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SERIOUS_BEGGING) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF + 6, 500
	skillname(SKILL_SPACT_SERIOUS_BEGGING) = lang("ñ{ãCï®åÓÇ¢", "Serious Begging")
	skilldesc(SKILL_SPACT_SERIOUS_BEGGING) = lang("ã‡â›Ç‚êHÇ◊ÇÈï®ÇÇﬂÇÆÇÒÇ≈Ç‡ÇÁÇ§", "Ask for gold coins and foods")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_UNCONTROL) = SKILL_ATTR_STR, SKILL_TYPE_SP, 26, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_UNCONTROL) = lang("ñ\ëñ", "Uncontrol")
	skilldesc(SKILL_SPACT_UNCONTROL) = lang("î\óÕÇÃïœìÆÅEñ\ÇÍâÒÇÈ", "?")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CONVERGE_BREATH) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_CONVERGE_BREATH) = lang("é˚ë©ï˙éÀ", "Converge Breath")
	skilldesc(SKILL_SPACT_CONVERGE_BREATH) = lang("ã≠óÕÇ»àÍóÒï˙éÀ/ÉQÅ[ÉW100Åìè¡îÔ", "Breath(converge)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TIME_STOP) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 200, TARGET_TYPE_SELF, 500
	skillname(SKILL_SPACT_TIME_STOP) = lang("çèÇÃó‹", "Time Stop")
	skilldesc(SKILL_SPACT_TIME_STOP) = lang("éûä‘Çé~ÇﬂÇÈ/ÉQÅ[ÉW100Åìè¡îÔ", "?")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PIERCING_ZERO_SHOOT) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_PIERCING_ZERO_SHOOT) = lang("óÎÇÃä‘åÇÅEìÀå^", "Piercing Zero Shoot")
	skilldesc(SKILL_SPACT_PIERCING_ZERO_SHOOT) = lang("ãﬂÇ¢ÇŸÇ«ä—í ó¶è„è∏/ÉQÅ[ÉW100Åìè¡îÔ", "Incresed Penetration rate at close range/100% gauge used")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DIFFUSION_WAVE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 15, 0
	skillname(SKILL_SPACT_DIFFUSION_WAVE) = lang("ñÇãVâﬁ", "Diffusion Wave")
	skilldesc(SKILL_SPACT_DIFFUSION_WAVE) = lang("HPMPâÒïúí∑éÀíˆçUåÇ/ÉQÅ[ÉW100Åìè¡îÔ", "Attack Multiple enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ASSIMILATE) = SKILL_ATTR_STR, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_ASSIMILATE) = lang("ìØâªãzé˚", "Assimilate")
	skilldesc(SKILL_SPACT_ASSIMILATE) = lang("êáñ∞Å{ãzé˚", "Assimilate")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_OVER_BOOST) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_OVER_BOOST) = lang("ÉIÅ[ÉoÅ[ÉuÅ[ÉXÉg", "Over Boost")
	skilldesc(SKILL_SPACT_OVER_BOOST) = lang("î\óÕã≠âª", "Over Boost")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HARMONIC_ASSAULT) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 24, TARGET_TYPE_SELF + 6, 0
	skillname(SKILL_SPACT_HARMONIC_ASSAULT) = lang("ÉnÅ[ÉÇÉjÉbÉNÉAÉTÉãÉg", "Harmonic Assault")
	skilldesc(SKILL_SPACT_HARMONIC_ASSAULT) = lang("åè¬ånãZî\ã≠âª", "Enhances negotiate abilities")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_RESONANT_VOICE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_RESONANT_VOICE) = lang("ÉåÉ]ÉiÉìÉgÉ{ÉCÉX", "Resonant Voice")
	skilldesc(SKILL_SPACT_RESONANT_VOICE) = lang("éãäEì‡ìGêÌà”ëré∏/ÉQÅ[ÉW100Åìè¡îÔ", "Fatigue enemies, halve power gauges")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_KIJIN_SHIBARI) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF + 6, 0
	skillname(SKILL_SPACT_KIJIN_SHIBARI) = lang("ãSê_îõÇË", "Kijin Shibari")
	skilldesc(SKILL_SPACT_KIJIN_SHIBARI) = lang("ä™ï®Ç10ñáè¡îÔ/ëSëÃë©îõäÌópé„ëÃâª", "Consume 10 scrolls,enemies bind and weaken DEX")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BURN_SCROLLS) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_BURN_SCROLLS) = lang("é‹îMäGä™", "Burn Scrolls")
	skilldesc(SKILL_SPACT_BURN_SCROLLS) = lang("ä™ï®Ç20ñáè¡îÔ/âŒâäëÆê´çUåÇ", "Consume 20 scrolls, fire attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_JYUSOU_GOUSHIN) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_JYUSOU_GOUSHIN) = lang("éÙëïçãêg", "Jyusou Goushin")
	skilldesc(SKILL_SPACT_JYUSOU_GOUSHIN) = lang("é©ï™ÇÃëïîıÇ…éÙÇ¢/é©å»ã≠âª", "Self-curse and self-reinforcement")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DEATH_BIND) = SKILL_ATTR_STR, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_DEATH_BIND) = lang("ÉfÉXÉoÉCÉìÉh", "Death Bind")
	skilldesc(SKILL_SPACT_DEATH_BIND) = lang("ë©îõÅ{ä—í çUåÇ", "Penetrating attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DOWNPOUR_SPORE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF + 6, 500
	skillname(SKILL_SPACT_DOWNPOUR_SPORE) = lang("ç~ÇËíçÇÆñEéq", "Downpour Spore")
	skilldesc(SKILL_SPACT_DOWNPOUR_SPORE) = lang("é¸àÕÇÃìGÇ…êáñ∞Ç∆ì›ë´å¯â ", "Sleep and speeddown surrounding enemies.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MIND_BREAK) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 3, 0
	skillname(SKILL_SPACT_MIND_BREAK) = lang("ê∏ê_îjâÛåı", "Mind Break")
	skilldesc(SKILL_SPACT_MIND_BREAK) = lang("ê∏ê_çUåÇ/ÉQÅ[ÉW100Åìè¡îÔ", "Mental Pollution")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HAND_OF_SPLENDOR) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 20, 0
	skillname(SKILL_SPACT_HAND_OF_SPLENDOR) = lang("åıãPÇÃéË", "Hand of Splendor")
	skilldesc(SKILL_SPACT_HAND_OF_SPLENDOR) = lang("åıÇí@Ç´Ç¬ÇØÇÈ/ÉQÅ[ÉW100Åìè¡îÔ", "magic attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GRAVITON_BUSTER) = SKILL_ATTR_CON, SKILL_TYPE_SP, 20, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_GRAVITON_BUSTER) = lang("ÉOÉâÉrÉgÉìÉoÉXÉ^Å[", "Graviton Buster")
	skilldesc(SKILL_SPACT_GRAVITON_BUSTER) = lang("äKëwàÀë∂ï˙éÀ/ÉQÅ[ÉW100Åìè¡îÔ", "Gravity Blast/Consumes 100% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MANA_SLASH) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_MANA_SLASH) = lang("ñÇênéÎÇË", "Mana Slash")
	skilldesc(SKILL_SPACT_MANA_SLASH) = lang("ìGÇÃMPÇ…Ç‡É_ÉÅÅ[ÉW/ÉQÅ[ÉW100Åìè¡îÔ", "Damages enemy MP/100% gauge used")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_INTENSIVE_POWER) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_INTENSIVE_POWER) = lang("óÕÇÃèWñÒ", "Intensive Power")
	skilldesc(SKILL_SPACT_INTENSIVE_POWER) = lang("HPMPâÒïúÅEÉQÅ[ÉWè„è∏", "HP/MP Recovery, Increase gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SPACE_RETENTION) = SKILL_ATTR_CON, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_SPACE_RETENTION) = lang("ãÛä‘è∂à¨", "Space Retention")
	skilldesc(SKILL_SPACT_SPACE_RETENTION) = lang("ÉeÉåÉ|Å[Égñhé~/ÉtÉBÅ[ÉãÉhïœâªâèú", "Prevent teleport/Field change reset")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DISTANT_ATTACK) = SKILL_ATTR_DEX, SKILL_TYPE_ATTACK, 2, TARGET_TYPE_ENEMY + 3, 0
	skillname(SKILL_SPACT_DISTANT_ATTACK) = lang("âìãóó£ë≈åÇ", "Distant Attack")
	skilldesc(SKILL_SPACT_DISTANT_ATTACK) = lang("óLéÀíˆ/í èÌãﬂê⁄çUåÇ", "Distant Attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SPINNING_THROW) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_SPINNING_THROW) = lang("í¥ó÷ì]", "Spinning Throw")
	skilldesc(SKILL_SPACT_SPINNING_THROW) = lang("ä—í ó¶è„è∏ïKíÜâÔêS/ÉQÅ[ÉW100Åìè¡îÔ", "Revolve enough to penetrate")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_METAL_GUARD) = SKILL_ATTR_CON, SKILL_TYPE_SP, 70, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_METAL_GUARD) = lang("ÉÅÉ^ÉãÉRÅ[Ég", "Metal Guard")
	skilldesc(SKILL_SPACT_METAL_GUARD) = lang("àÍìxÇæÇØéÛÇØÇÈÉ_ÉÅÅ[ÉWÇ1/10Ç…Ç∑ÇÈ", "To 1/10 damage once.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_THUNDERCLAP_KICK) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 35, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_THUNDERCLAP_KICK) = lang("êvóããr", "Thunderclap Kick")
	skilldesc(SKILL_SPACT_THUNDERCLAP_KICK) = lang("ìÀåÇÅ{í èÌìdåÇäiì¨/ÉQÅ[ÉW25Åìè¡îÔ", "Teleport+Martial lightning attack/Consumes 25% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_STRUCK_OUT) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 15, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_STRUCK_OUT) = lang("ÉXÉgÉâÉbÉNÉAÉEÉg", "Struck Out")
	skilldesc(SKILL_SPACT_STRUCK_OUT) = lang("3Å~3É}ÉXÇ÷ÇÃí èÌìäù±çUåÇ", "Throwing attack circle")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BEWITCH) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_BEWITCH) = lang("îYéEçUåÇ", "Bewitch")
	skilldesc(SKILL_SPACT_BEWITCH) = lang("ê¨å˜Ç∑ÇÈÇ∆ã‡Çä™Ç´è„Ç∞ìÆÇ´Çé~ÇﬂÇÈ", "Stop movement of opponent")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHADOW_RUSH) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_SHADOW_RUSH) = lang("ëSåRìÀåÇ", "Shadow Rush")
	skilldesc(SKILL_SPACT_SHADOW_RUSH) = lang("ëSàıÇ≈ìÀåÇÅ{í èÌãﬂê⁄çUåÇ/ÉQÅ[ÉW75Åìè¡îÔ", "Party Teleport+Attack/Consumes 75% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TAG_FORCE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 24, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_TAG_FORCE) = lang("É^ÉbÉOÉtÉHÅ[ÉX", "Tag Force")
	skilldesc(SKILL_SPACT_TAG_FORCE) = lang("É^ÉbÉOã≠âªâÒïú/ÉQÅ[ÉW50Åìè¡îÔ", "Strengthen tag teams/Consumes 50% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BODY_BLOW) = SKILL_ATTR_STR, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_BODY_BLOW) = lang("É{ÉfÉBÉuÉçÅ[", "Body Blow")
	skilldesc(SKILL_SPACT_BODY_BLOW) = lang("í èÌäiì¨çUåÇÇ…É{ÉfÉBÉuÉçÅ[í«â¡", "Add body blow to martial")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_NECRO_FORCE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_NECRO_FORCE) = lang("ÉlÉNÉçÉtÉHÅ[ÉX", "Necro Force")
	skilldesc(SKILL_SPACT_NECRO_FORCE) = lang("égñÉAÉìÉfÉbÉhêßå‰", "Control coffin undead")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CLOSE_SUICIDE) = SKILL_ATTR_CON, SKILL_TYPE_SP, 18, TARGET_TYPE_ENEMY, 700
	skillname(SKILL_SPACT_CLOSE_SUICIDE) = lang("ìπòAÇÍ", "Close Suicide")
	skilldesc(SKILL_SPACT_CLOSE_SUICIDE) = lang("é©îö", "Suicide")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_KNOCKOUT) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_KNOCKOUT) = lang("ÉmÉbÉNÉAÉEÉgçUåÇ", "Knockout")
	skilldesc(SKILL_SPACT_KNOCKOUT) = lang("à–óÕå∏í èÌãﬂê⁄çUåÇÇ≈ãCê‚Çë_Ç§", "Attack to stun")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_OVERRAY) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_OVERRAY) = lang("ëΩèdârè•ñÇñ@", "Over-Ray")
	skilldesc(SKILL_SPACT_OVERRAY) = lang("íáä‘ÇÃñÇóÕÇèWêœ/ÉQÅ[ÉW50Åìè¡îÔ", "Attack by integrating the magic of ally.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SMASH_GROUND) = SKILL_ATTR_STR, SKILL_TYPE_SP, 12, TARGET_TYPE_SELF_ONLY, 220
	skillname(SKILL_SPACT_SMASH_GROUND) = lang("ínç”Ç´", "Smash Ground")
	skilldesc(SKILL_SPACT_SMASH_GROUND) = lang("ó◊ê⁄ëŒè€çUåÇ/ãØÇ›ïtó^", "Attack circle")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VORACITY_FANG) = SKILL_ATTR_STR, SKILL_TYPE_HAND, 12, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_VORACITY_FANG) = lang("Ê√êHÇÃâÂ", "Voracity Fang")
	skilldesc(SKILL_SPACT_VORACITY_FANG) = lang("ëÃóÕãzé˚ÅEñûï†éûñ≥å¯", "Drain HP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHIELD_STRIKE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_SHIELD_STRIKE) = lang("èÇâ£ÇË", "Shield Strike")
	skilldesc(SKILL_SPACT_SHIELD_STRIKE) = lang("è’åÇÇ≈ìGÇûNûOñÉ·É/ÉQÅ[ÉW100Åìè¡îÔ", "Impact that dims and paralyzes enemies/100% gauge used")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GAUGE_RELEASE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 1, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_GAUGE_RELEASE) = lang("ÅyóÕÇÃâï˙Åz", "<Gauge Release>")
	skilldesc(SKILL_SPACT_GAUGE_RELEASE) = lang("éüÇÃçUåÇéûÇ…ÉQÅ[ÉWãZÇ≈í«â¡çUåÇ", "Add gauge skill to the next attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ALCHEMICAL_RAIN) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 35, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_ALCHEMICAL_RAIN) = lang("òBê¨âJ", "Alchemical Rain")
	skilldesc(SKILL_SPACT_ALCHEMICAL_RAIN) = lang("éãäEì‡ÇÃñ°ï˚Ç…É|Å[ÉVÉáÉìå¯â ", "Apply potion effect to allies in sight")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LIQUID_MANIPULATION) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF + 6, 0
	skillname(SKILL_SPACT_LIQUID_MANIPULATION) = lang("âtëÃëÄçÏíe", "Liquid Manipulation")
	skilldesc(SKILL_SPACT_LIQUID_MANIPULATION) = lang("éãäEì‡ÇÃìGÇ…É|Å[ÉVÉáÉìå¯â ", "Apply potion effect to enemies in sight")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MULTIPLE_GATHER) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_MULTIPLE_GATHER) = lang("ã≠êßèWçá", "Multiple Gather")
	skilldesc(SKILL_SPACT_MULTIPLE_GATHER) = lang("ï°êîÇÃëŒè€Çà¯Ç´äÒÇπ", "Draw targets")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PSYCHIC_WAVE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PSYCHIC_WAVE) = lang("ÉTÉCÉLÉbÉNÉEÉFÅ[Éu", "Psychic Wave")
	skilldesc(SKILL_SPACT_PSYCHIC_WAVE) = lang("ë©îõÅ{LVàÀë∂ÇÃïœìÆå≈íËÉ_ÉÅÅ[ÉW", "Bind and level dependent fixed damage")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_READING_PARTY) = SKILL_ATTR_LER, SKILL_TYPE_SP, 25, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_READING_PARTY) = lang("ì«èëâÔ", "Reading Party")
	skilldesc(SKILL_SPACT_READING_PARTY) = lang("íáä‘Ç∆àÍèèÇ…èëï®ÇÃâì«ÇçsÇ§", "Reading Party")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LOVE_CRAFTING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF + 6, 500
	skillname(SKILL_SPACT_LOVE_CRAFTING) = lang("òRèoÇ∑ÇÈã∂ãC", "Love Crafting")
	skilldesc(SKILL_SPACT_LOVE_CRAFTING) = lang("éãäEì‡ìGã∂ãC", "Craze enemies in sight")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DUPLICANE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_DUPLICANE) = lang("ÉfÉÖÉvÉäÉPÉCÉì", "Dupli-Cane")
	skilldesc(SKILL_SPACT_DUPLICANE) = lang("çUåÇèÒÇÃâÒêîå∏ñ≥å¯/à–óÕå∏/Sp3è¡îÔ", "Use rods without consuming charges/Reduced Power/Consumes 3 SP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LOCK_BREAK) = SKILL_ATTR_STR, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_LOCK_BREAK) = lang("îjè˘çUåÇ", "Lock Break")
	skilldesc(SKILL_SPACT_LOCK_BREAK) = lang("óÕÇåãèWÇµåÆîjâÛ/íÜêgî˜îjëπ", "Join forces to break the lock")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MEMORY_POISON) = SKILL_ATTR_CON, SKILL_TYPE_HAND, 150, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_MEMORY_POISON) = lang("êNêHÇÃì≈âÂ", "Memory Poison")
	skilldesc(SKILL_SPACT_MEMORY_POISON) = lang("ì≈ëÆê´/î\óÕàÍéûå∏è≠", "Decrease ability temporarily")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BLADE_TURBULENCE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_BLADE_TURBULENCE) = lang("óêÇÍêÿïó", "Blade Turbulence")
	skilldesc(SKILL_SPACT_BLADE_TURBULENCE) = lang("é¸àÕÇÃìGÇ…êÿÇËèùÉ_ÉÅÅ[ÉW", "Bleeding attack to surrounding enemies.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CLASH_RUSH) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 25, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_CLASH_RUSH) = lang("éÃÇƒêg", "Clash Rush")
	skilldesc(SKILL_SPACT_CLASH_RUSH) = lang("ê⁄ãﬂçUåÇ/îΩìÆÇ†ÇË/ÉQÅ[ÉW25Åìè¡îÔ", "Attack at the risk of life")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DEATH_SONG) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_DEATH_SONG) = lang("îjñ≈ÇÃâÃ", "Death Song")
	skilldesc(SKILL_SPACT_DEATH_SONG) = lang("é¸àÕëSàıÇ…âπëÆê´ëŒçRéÄÇÃêÈçê", "Death for surrounding.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HOMING_LASER) = SKILL_ATTR_PER, SKILL_TYPE_SP, 12, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_HOMING_LASER) = lang("É}ÉãÉ`ÉçÉbÉNéÀåÇ", "Homing Laser")
	skilldesc(SKILL_SPACT_HOMING_LASER) = lang("ìGÇÃêîÇ…âûÇ∂Çƒï™éUÇ∑ÇÈéÀåÇ", "The entire distributed attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MP_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_SP, 25, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_MP_BREATH) = lang("îjâÛÇÃñzó¨", "MP Breath")
	skilldesc(SKILL_SPACT_MP_BREATH) = lang("MP25Åìè¡îÔ/ï˙éÀçUåÇ", "MP Breath")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BOUND_IN_BLOOD) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_BOUND_IN_BLOOD) = lang("ååÇÃåãë©", "Bound in Blood")
	skilldesc(SKILL_SPACT_BOUND_IN_BLOOD) = lang("å≥ÅXÇÃéÌë∞Ç™ìØÇ∂íáä‘Çã≠âª", "Strengthen same race allies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SILENT_OCEAN) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 28, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_SILENT_OCEAN) = lang("íæñŸÇÃäC", "Silent Ocean")
	skilldesc(SKILL_SPACT_SILENT_OCEAN) = lang("éãäEì‡êÖâª/îÕàÕì‡íæñŸ", "Flooded and silence")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DIMENSION_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 16, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_DIMENSION_FISHING) = lang("àüãÛíﬁÇË", "Dimension Fishing")
	skilldesc(SKILL_SPACT_DIMENSION_FISHING) = lang("ìG1ëÃÇà¯Ç´äÒÇπ", "Draw enemy")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FASCINATION_DANCE) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 21, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_FASCINATION_DANCE) = lang("ñ£óπÇÃïë", "Fascination Dance")
	skilldesc(SKILL_SPACT_FASCINATION_DANCE) = lang("ämó¶Ç≈éãäEì‡ÇÃìGÇñÉ·ÉÅEîÊòJ", "Stop movement of enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VINDALIAN_JIUJITSU) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_VINDALIAN_JIUJITSU) = lang("ÉîÉBÉìÉfÉäÉAÉìè_èp", "Vindalian Jiu-jitsu")
	skilldesc(SKILL_SPACT_VINDALIAN_JIUJITSU) = lang("äiì¨ÉXÉ^ÉCÉãÇÃêÿë÷", "Change martial style.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DATA_SCAN) = SKILL_ATTR_PER, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_DATA_SCAN) = lang("ÉfÅ[É^ÉXÉLÉÉÉì", "Data scan")
	skilldesc(SKILL_SPACT_DATA_SCAN) = lang("ï™êÕóÕã≠âª/ñàÉ^Å[Éìî˜îÊòJ", "Increase analysis power/Uses SP each turn")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ADVANCED_CASTING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_ADVANCED_CASTING) = lang("çÇìxârè•", "Advanced Casting")
	skilldesc(SKILL_SPACT_ADVANCED_CASTING) = lang("ñÇñ@ÇÃârè•ìÔìxÅEåoå±ílÇ™ëùâ¡", "Increase casting difficulty and experience")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BLADE_STRINGS) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_BLADE_STRINGS) = lang("ÉuÉåÅ[ÉhÉXÉgÉäÉìÉOÉX", "Blade Strings")
	skilldesc(SKILL_SPACT_BLADE_STRINGS) = lang("êÌèpäÌópàÀë∂çUåÇ/ÉgÉâÉbÉvê›íu", "Cutting attack/Trap installation")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DANCING_WIRE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 18, TARGET_TYPE_OTHER + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_DANCING_WIRE) = lang("óxÇÈç|ê¸", "Dancing Wire")
	skilldesc(SKILL_SPACT_DANCING_WIRE) = lang("ëŒè€Çë©îõÇµà¯Ç´äÒÇπ", "Draw target/Binding target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_STIFFEN) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 8, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_STIFFEN) = lang("çdíºÇÃä·ç∑Çµ", "Eye of Stiffen")
	skilldesc(SKILL_SPACT_EYE_OF_STIFFEN) = lang("ê_åoÉ_ÉÅÅ[ÉW/ëŒè€ÇÃñhå‰óÕàÍéûè„è∏", "Damage nerve/Increases protect target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EYE_OF_ILLUSION) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 8, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_EYE_OF_ILLUSION) = lang("å∂òfÇÃä·ç∑Çµ", "Eye of Illusion")
	skilldesc(SKILL_SPACT_EYE_OF_ILLUSION) = lang("å∂òfÉ_ÉÅÅ[ÉW", "Damage mind")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EXTERMINATION_BREATH) = SKILL_ATTR_CON, SKILL_TYPE_SP, 10, TARGET_TYPE_BOTH + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_EXTERMINATION_BREATH) = lang("ürñ≈â¬ïœï˙éÀ", "Extermination Breath")
	skilldesc(SKILL_SPACT_EXTERMINATION_BREATH) = lang("ëœê´ëÆê´éãäEì‡ï˙éÀ/ÉQÅ[ÉW25Åìè¡îÔ", "All Breath(variable)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_RESOLUTION_HAND) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_RESOLUTION_HAND) = lang("òBê¨è∂", "Resolution Hand")
	skilldesc(SKILL_SPACT_RESOLUTION_HAND) = lang("éËånãZî\Ç…í«â¡É_ÉÅÅ[ÉW", "Touch and damage")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MATERIALIZE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 40, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_MATERIALIZE) = lang("É}ÉeÉäÉAÉâÉCÉY", "Materialize")
	skilldesc(SKILL_SPACT_MATERIALIZE) = lang("ëŒè€Ç™ïméÄÇ»ÇÁÉ}ÉeÉäÉAÉãâª", "Kill target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_COWERING_SMILE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 32, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_COWERING_SMILE) = lang("êÌú…ÇÃèŒäÁ", "Cowering Smile")
	skilldesc(SKILL_SPACT_COWERING_SMILE) = lang("éãäEì‡Ç…àﬁèkÇ∆êkÇ¶ÇÇ‹Ç´éUÇÁÇ∑", "Spread atrophy and chills around.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SMILE_FIELD) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_SMILE_FIELD) = lang("ÉXÉ}ÉCÉãÉtÉBÅ[ÉãÉh", "Smile Field")
	skilldesc(SKILL_SPACT_SMILE_FIELD) = lang("éãäEì‡ëSàıã≠âª", "Strengthen everyone around.")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ABYSS_IN_THE_EYE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 21, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_ABYSS_IN_THE_EYE) = lang("ìµÇÃâúÇÃê[ï£", "Abyss in the eye")
	skilldesc(SKILL_SPACT_ABYSS_IN_THE_EYE) = lang("êSä·ã≠âª/ä·ç∑ÇµånÇÃãZî\Ç…å¯â í«â¡", "Enhance Eye of Mind/Adds absorption to Eye-skills")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHIELD_PARRY) = SKILL_ATTR_CON, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_SHIELD_PARRY) = lang("ÉVÅ[ÉãÉhÉpÉäÉB", "Shield Parry")
	skilldesc(SKILL_SPACT_SHIELD_PARRY) = lang("ãﬂê⁄çUåÇÇèÇÇ≈íeÇ≠", "Parry")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ROCKET_FIRE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 20, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_ROCKET_FIRE) = lang("ñCíeî≠éÀ", "Rocket Fire")
	skilldesc(SKILL_SPACT_ROCKET_FIRE) = lang("ñhå‰Çâ∫Ç∞ÇÈ/ÉQÅ[ÉW25Åìè¡îÔ", "Attack and reduce defense/Consumes 25% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_NUCLEAR_FIRE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 50, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_NUCLEAR_FIRE) = lang("äjî≠éÀ", "Nuclear Fire")
	skilldesc(SKILL_SPACT_NUCLEAR_FIRE) = lang("çLîÕàÕîöîj/ÉQÅ[ÉW25Åìè¡îÔ", "Extensive Explosion/Consumes 25% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GOLDEN_STORM) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 18, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_GOLDEN_STORM) = lang("ÉfÉtÉåÉXÉgÅ[ÉÄ", "Golden Storm")
	skilldesc(SKILL_SPACT_GOLDEN_STORM) = lang("èäéùã‡â›ÇQêÁñáÇìäÇ∞éUÇÁÇ∑", "Consume 2000gold attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GRAVITY_ACCEL) = SKILL_ATTR_CON, SKILL_TYPE_SP, 21, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_GRAVITY_ACCEL) = lang("èdóÕïŒå¸", "Gravity Accel")
	skilldesc(SKILL_SPACT_GRAVITY_ACCEL) = lang("èdóÕÇÃå¸Ç´ÇïœÇ¶ÇƒêÌì¨Ç…âûóp", "Gravity buff")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GIGA_GRAVITATION) = SKILL_ATTR_CON, SKILL_TYPE_SP, 18, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 0
	skillname(SKILL_SPACT_GIGA_GRAVITATION) = lang("í¥èdà≥éE", "Giga Gravitation")
	skilldesc(SKILL_SPACT_GIGA_GRAVITATION) = lang("é¸ï”ÇÃìGÇ…èdóÕàÀë∂É_ÉÅÅ[ÉW/MP10Åìè¡îÔ", "Gravity Damage Surround/Consumes 10% MP")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HYPER_DASH) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 21, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_HYPER_DASH) = lang("óÛëñîj", "Hyper Dash")
	skilldesc(SKILL_SPACT_HYPER_DASH) = lang("âüÇµÇÃÇØà⁄ìÆÇµÇ¬Ç¬É_ÉÅÅ[ÉW", "Run through and damage enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VIOLENT_GARDEN) = SKILL_ATTR_LER, SKILL_TYPE_SP, 18, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_VIOLENT_GARDEN) = lang("ñ\ãsÇÃíÎâÄ", "Violent Garden")
	skilldesc(SKILL_SPACT_VIOLENT_GARDEN) = lang("éãäEì‡ë©îõì≈É_ÉÅÅ[ÉW", "Bind and poison")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MISTELTEIN) = SKILL_ATTR_LER, SKILL_TYPE_SP, 8, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_MISTELTEIN) = lang("É~ÉXÉgÉãÉeÉBÉì", "Misteltein")
	skilldesc(SKILL_SPACT_MISTELTEIN) = lang("ëŒè€é„ëÃÅEÉ}ÉiÉ_ÉÅÅ[ÉWÅEê_ì¡å¯", "Damage MP and weaken")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_AROMAGEDDON) = SKILL_ATTR_LER, SKILL_TYPE_SP, 24, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_AROMAGEDDON) = lang("ÉAÉçÉ}ÉQÉhÉì", "Aromageddon")
	skilldesc(SKILL_SPACT_AROMAGEDDON) = lang("ñ°ï˚MPâÒïúìGé„ëÃ/ê∏ñ˚è¡îÔ", "Expend essential oil")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CURTAIN_OF_SMOKE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 31, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_CURTAIN_OF_SMOKE) = lang("çïâåÇÃÉgÉoÉä", "Curtain of Smoke")
	skilldesc(SKILL_SPACT_CURTAIN_OF_SMOKE) = lang("éãäEÇã∑ÇﬂÇÈâåÇÃî≠ê∂", "Create smoke")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SMOKE_MIRROR) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF, 500
	skillname(SKILL_SPACT_SMOKE_MIRROR) = lang("âåìfÇ≠ãæ", "Smoke Mirror")
	skilldesc(SKILL_SPACT_SMOKE_MIRROR) = lang("âåñãÅïî\óÕì]é ", "?")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MIRROR) = SKILL_ATTR_PER, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 500
	skillname(SKILL_SPACT_MIRROR) = lang("í¥îFéØ", "Mirror")
	skilldesc(SKILL_SPACT_MIRROR) = lang("ëŒè€ÇÃèÛë‘ÇÃä¥ím", "Know bonus")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MELT_CLINCH) = SKILL_ATTR_STR, SKILL_TYPE_SP, 25, TARGET_TYPE_ENEMY, 0
	skillname(SKILL_SPACT_MELT_CLINCH) = lang("ónâÉNÉäÉìÉ`", "Melt Clinch")
	skilldesc(SKILL_SPACT_MELT_CLINCH) = lang("é_çUåÇÇ∆àﬁèk/óºé“ë©îõ", "Acid attack/daunted/bind")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FORMLESS_FETTER) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 27, TARGET_TYPE_SELF, 0
	skillname(SKILL_SPACT_FORMLESS_FETTER) = lang("ñ≥å`ÇÃûg", "Formless Fetter")
	skilldesc(SKILL_SPACT_FORMLESS_FETTER) = lang("É}ÉbÉvÉGÉtÉFÉNÉgè„ÇÃìGÇçUåÇë©îõ", "Bind on map effects")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BLOOD_STREAM) = SKILL_ATTR_CON, SKILL_TYPE_SP, 18, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_BLOOD_STREAM) = lang("ëNååÇÃåÇên", "Blood Stream")
	skilldesc(SKILL_SPACT_BLOOD_STREAM) = lang("èoååó àÀë∂çUåÇ/èoååà´âª", "Line attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_FLAME_OF_RAGE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 22, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_FLAME_OF_RAGE) = lang("ì{ÇËÇÃîöâä", "Flame of Rage")
	skilldesc(SKILL_SPACT_FLAME_OF_RAGE) = lang("åÉì{éûÇÃÇ›éãäEì‡âŒâäÉ_ÉÅÅ[ÉW", "Fire damage only when fury")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_IMPACT_GUNFIRE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_IMPACT_GUNFIRE) = lang("èdè’åÇífìÆíe", "Impact Gunfire")
	skilldesc(SKILL_SPACT_IMPACT_GUNFIRE) = lang("è’åÇÇ≈ìGì]ì|/ÉQÅ[ÉW100Åìè¡îÔ", "Knockdown target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ONE_POINT_SHOOT) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_ONE_POINT_SHOOT) = lang("àÎì_òAíeèe", "One Point Shoot")
	skilldesc(SKILL_SPACT_ONE_POINT_SHOOT) = lang("ñhå‰àÍéûìIÇ…â∫Ç∞ÇÈ/ÉQÅ[ÉW100Åìè¡îÔ", "Defense break")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_CRITICAL_PARTICLE_CANNON) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_CRITICAL_PARTICLE_CANNON) = lang("ó’äEó±éqñC", "Critical Particle Cannon")
	skilldesc(SKILL_SPACT_CRITICAL_PARTICLE_CANNON) = lang("ëMåıÇ≈ìGñ”ñ⁄/ÉQÅ[ÉW100Åìè¡îÔ", "hitting the target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HELM_SMASHER) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_HELM_SMASHER) = lang("äïóÙÇ´", "Helm Smasher")
	skilldesc(SKILL_SPACT_HELM_SMASHER) = lang("è’åÇÇ≈ìGñÉ·É/ÉQÅ[ÉW100Åìè¡îÔ", "Paralyze target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ARROW_RAIN) = SKILL_ATTR_PER, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_ARROW_RAIN) = lang("óÅÇ—ÇπëÍñÓéÀ", "Arrow Rain")
	skilldesc(SKILL_SPACT_ARROW_RAIN) = lang("âÒîàÍéûìIÇ…â∫Ç∞ÇÈ/ÉQÅ[ÉW100Åìè¡îÔ", "Reduce avoidance")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ACID_HURRICANE) = SKILL_ATTR_CON, SKILL_TYPE_SP, 5, TARGET_TYPE_ENEMY + 10, 0
	skillname(SKILL_SPACT_ACID_HURRICANE) = lang("ïÖêHÇÃóÛïó", "Acid Hurricane")
	skilldesc(SKILL_SPACT_ACID_HURRICANE) = lang("é_çUåÇ/äZÇ‚ÉÅÉ^ÉãÇ…ì≈", "Line(Acid)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_KAMUI) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF + 6, 0
	skillname(SKILL_SPACT_KAMUI) = lang("ê_à–", "Kamui")
	skilldesc(SKILL_SPACT_KAMUI) = lang("ê_ÅXÇÃóÕÇ≈ëΩç Ç»çUåÇ", "Various attacks")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BLAME_PAIN) = SKILL_ATTR_CON, SKILL_TYPE_SP, 19, TARGET_TYPE_ENEMY + 4, 500
	skillname(SKILL_SPACT_BLAME_PAIN) = lang("ínçñÇÃê”ÇﬂãÍ", "Blame Pain")
	skilldesc(SKILL_SPACT_BLAME_PAIN) = lang("ínçñÉ_ÉÅÅ[ÉW/çâñ‚ê¨å˜éûÉQÅ[ÉWå∏è≠", "Damage nether/Reduce power gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_WIN) = SKILL_ATTR_SPD, SKILL_TYPE_SP, 1, TARGET_TYPE_ENEMY + 7, 500
	skillname(SKILL_SPACT_WIN) = lang("*èüóò*", "<Win>")
	skilldesc(SKILL_SPACT_WIN) = lang("ë¶éÄçUåÇ/PurgeÉÇÅ[ÉhêÍóp", "Instant death attack / Purge mode only")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PURGE) = SKILL_ATTR_SPD, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PURGE) = lang("*Purge*", "<Purge>")
	skilldesc(SKILL_SPACT_PURGE) = lang("éãäEì‡ÇÃìGïméÄâª/PurgeÉÇÅ[ÉhêÍóp", "Enemies dying / Purge mode only")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_UNISON_IMPACT) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_UNISON_IMPACT) = lang("ÅyçáëÃçUåÇî≠ìÆÅz", "<Unison Impact>")
	skilldesc(SKILL_SPACT_UNISON_IMPACT) = lang("ëSàıÇÃÉQÅ[ÉWëSè¡îÔÇµÇƒçáëÃçUåÇ", "Attack with all ally")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GROUP_HYPNOSIS) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 25, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_GROUP_HYPNOSIS) = lang("èWícç√ñ∞", "Group Hypnosis")
	skilldesc(SKILL_SPACT_GROUP_HYPNOSIS) = lang("éãäEì‡ÇÃìGêáñ∞ÅEêÙî]", "Sleep or brainwashing enemies in sight")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_THREAD_OF_INNERVATION) = SKILL_ATTR_PER, SKILL_TYPE_SP, 14, TARGET_TYPE_ENEMY + 4, 0
	skillname(SKILL_SPACT_THREAD_OF_INNERVATION) = lang("ê_åoéxîzÇÃéÖ", "Thread of Innervation")
	skilldesc(SKILL_SPACT_THREAD_OF_INNERVATION) = lang("ê∂âªäwä¥äoàÀë∂çUåÇ/ïméÄÇ»ÇÁêlå`âª", "Nerve attack/Change doll")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MAGNECOAT) = SKILL_ATTR_PER, SKILL_TYPE_SP, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_MAGNECOAT) = lang("É}ÉOÉlÉRÅ[Ég", "Magnecoat")
	skilldesc(SKILL_SPACT_MAGNECOAT) = lang("í èÌçUåÇÇ…âeãøÇ∑ÇÈÇŸÇ«ÇÃé•ãCÇïtó^/âèú", "Add/remove magnetism enough to affect normal attacks")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LINEAR_LAUNCHER) = SKILL_ATTR_PER, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_LINEAR_LAUNCHER) = lang("ÉäÉjÉAÉâÉìÉ`ÉÉÅ[", "Linear Launcher")
	skilldesc(SKILL_SPACT_LINEAR_LAUNCHER) = lang("ä¥äoèdó àÀë∂çUåÇ/ÉAÉCÉeÉÄ1Ç¬è¡îÔ", "Consume 1 item, PER and weight dependent attack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_E_MAG_CAGE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + 6, 0
	skillname(SKILL_SPACT_E_MAG_CAGE) = lang("ìdé•çñ", "E-Mag Cage")
	skilldesc(SKILL_SPACT_E_MAG_CAGE) = lang("ëSàÊìdåÇîÊòJñÉ·É/ÉQÅ[ÉW80Åìè¡îÔ", "Lightning fatigue and paralysis field/Consumes 80% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_E_MAG_TORNADO) = SKILL_ATTR_PER, SKILL_TYPE_SP, 25, TARGET_TYPE_ENEMY + 7, 0
	skillname(SKILL_SPACT_E_MAG_TORNADO) = lang("í¥ìdé•ÉgÉãÉlÅ[Éh", "E-Mag Tornado")
	skilldesc(SKILL_SPACT_E_MAG_TORNADO) = lang("àÍíºê¸ìdåÇçUåÇ/ë©îõ", "Line(Lightning)/bind")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_WIRE_WORLD) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + 6, 0
	skillname(SKILL_SPACT_WIRE_WORLD) = lang("å∑ëíê¢äE", "Wire World")
	skilldesc(SKILL_SPACT_WIRE_WORLD) = lang("ëSàÊÉèÉCÉÑÅ[„©ã≠âª/ÉQÅ[ÉW80Åìè¡îÔ", "Wire trap strengthen field/Consumes 80% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ROCRUSHER) = SKILL_ATTR_CON, SKILL_TYPE_SP, 20, 3000 + 6, 0
	skillname(SKILL_SPACT_ROCRUSHER) = lang("ÉçÉbÉNÉâÉbÉVÉÉÅ[", "Rocrusher")
	skilldesc(SKILL_SPACT_ROCRUSHER) = lang("ëSàÊãﬂê⁄âÔêSéûë©îõ/ÉQÅ[ÉW80Åìè¡îÔ", "Lock with melee critical field/Consumes 80% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TICKLING_HELL) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 8, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_TICKLING_HELL) = lang("Ç≠Ç∑ÇÆÇËìVínçñ", "Tickling Hell")
	skilldesc(SKILL_SPACT_TICKLING_HELL) = lang("ë©îõ/èåèéüëÊÇ≈SPÇ‚ÉQÅ[ÉWå∏è≠", "Hold enemy/Tickling")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MARKING) = SKILL_ATTR_CON, SKILL_TYPE_SP, 10, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_MARKING) = lang("É}Å[ÉLÉìÉO", "Marking")
	skilldesc(SKILL_SPACT_MARKING) = lang("ëÃì‡ÇÃêÖï™ÇégÇ¢É}Å[ÉLÉìÉOÇ∑ÇÈ", "Mark with body moisture")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_GRAND_FINALE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 101, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_GRAND_FINALE) = lang("ÉOÉâÉìÉhÉtÉBÉiÅ[Éå", "Grand Finale")
	skilldesc(SKILL_SPACT_GRAND_FINALE) = lang("ÉvÉåÉCÉÑÅ[ãÏíÄ", "Player extermination")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DATA_DELETE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BALL, 0
	skillname(SKILL_SPACT_DATA_DELETE) = lang("ÉÅÉÇÉäÅ[ÉfÉäÅ[Ég", "Data Delete")
	skilldesc(SKILL_SPACT_DATA_DELETE) = lang("î\óÕÇàÍïîñïè¡/ÉQÅ[ÉW100Åìè¡îÔ", "Delete skill and power/Consumes 100% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHINING_THROW) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 40, 2000 + 7, 0
	skillname(SKILL_SPACT_SHINING_THROW) = lang("ÉVÉÉÉCÉjÉìÉOÉXÉçÅ[", "Shining Throw")
	skilldesc(SKILL_SPACT_SHINING_THROW) = lang("PVDVîÕàÕçUåÇ/ÉQÅ[ÉW5Åìëùâ¡", "Surround(PVDV)/Gain 5% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SAND_CANNON) = SKILL_ATTR_CON, SKILL_TYPE_SP, 5, 9000 + 6, 0
	skillname(SKILL_SPACT_SAND_CANNON) = lang("çªêoñC", "Sand Cannon")
	skilldesc(SKILL_SPACT_SAND_CANNON) = lang("PVDVëÆê´çUåÇ/ñ”ñ⁄åƒãzç¢ìÔ", "Breath(PVDV)")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DISPATCH_FLYING_BEAST) = SKILL_ATTR_DEX, SKILL_TYPE_TELEPORT, 5, TARGET_TYPE_DIRECTION, 0
	skillname(SKILL_SPACT_DISPATCH_FLYING_BEAST) = lang("îÚèbëóÇË", "Dispatch Flying Beast")
	skilldesc(SKILL_SPACT_DISPATCH_FLYING_BEAST) = lang("ëŒè€ÇÃìKê≥ãóó£Ç÷ëóÇÈ/ChainêÿÇË", "Send off chara and chain cut")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_KILLING_DANCE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 44, TARGET_TYPE_SELF_ONLY, 500
	skillname(SKILL_SPACT_KILLING_DANCE) = lang("éÄê_ÇÃïëì•", "Killing Dance")
	skilldesc(SKILL_SPACT_KILLING_DANCE) = lang("âÒîè„è∏/âÒîê¨å˜éûîΩåÇ", "Adds chance to avoid and counterattack")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DECAPITATION2) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 1, 0
	skillname(SKILL_SPACT_DECAPITATION2) = lang("éÒéÎÇËçUåÇ", "Decapitation")
	skilldesc(SKILL_SPACT_DECAPITATION2) = lang("ëŒè€Ç™ïméÄÇ»ÇÁë¶éÄ", "Kill low-health target")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_ANAPHYLAXIS) = SKILL_ATTR_CON, SKILL_TYPE_SP, 22, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_ANAPHYLAXIS) = lang("ÉAÉiÉtÉBÉâÉLÉVÅ[", "Anaphylaxis")
	skilldesc(SKILL_SPACT_ANAPHYLAXIS) = lang("éãäEì‡ì≈èÛë‘ÇÃìGÇ…ëÂÉ_ÉÅÅ[ÉW", "Attack enemies of the poison state")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DESTINY_DICE) = SKILL_ATTR_LUC, SKILL_TYPE_SP, 9, TARGET_TYPE_SELF + 6, 500
	skillname(SKILL_SPACT_DESTINY_DICE) = lang("çrÇ‘ÇÈÉ_ÉCÉX", "Destiny dice")
	skilldesc(SKILL_SPACT_DESTINY_DICE) = lang("îªíËÇ…âûÇ∂ÇƒéãäEì‡ìäù±É_ÉÅÅ[ÉW", "Attack enemies when successful")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HAZARD_RECIPE) = SKILL_ATTR_PER, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
	skillname(SKILL_SPACT_HAZARD_RECIPE) = lang("ÉnÉUÅ[ÉhÉåÉVÉs", "Hazard Recipe")
	skilldesc(SKILL_SPACT_HAZARD_RECIPE) = lang("êHïiÇâªäwï∫äÌÇ…çÏÇËïœÇ¶ÇÈ", "Reshape food to chemical weapon")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VENOTRATE) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 20, TARGET_TYPE_ENEMY + 10, 500
	skillname(SKILL_SPACT_VENOTRATE) = lang("ÉîÉFÉmÉgÉåÉCÉg", "Venotrate")
	skilldesc(SKILL_SPACT_VENOTRATE) = lang("ñ‚ìöñ≥ópÇ≈ì≈èÛë‘/ÉQÅ[ÉW25Åìè¡îÔ", "Poison target/Consumes 25% gauge")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PERSUASION) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PERSUASION) = lang("ëSóÕê‡ìæ", "Persuasion")
	skilldesc(SKILL_SPACT_PERSUASION) = lang("à”éuëŒçR/SPå∏Ç¡ÇƒÇ¢ÇÈëŒè€ÇŸÇ«îÊòJ", "Against WIL,Fatigue decreasing SP enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PECULIAR_JOKE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_PECULIAR_JOKE) = lang("ü”êgÇÃÉMÉÉÉO", "Peculiar Joke")
	skilldesc(SKILL_SPACT_PECULIAR_JOKE) = lang("ä¥äoëŒçR/ÉQÅ[ÉWÇ™í·Ç¢ëŒè€ÇŸÇ«îÊòJ", "Against PER,Fatigue low power gauge enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_BLENDED_LIE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_BLENDED_LIE) = lang("è≠ÇµÇÃëÂâR", "Blended Lie")
	skilldesc(SKILL_SPACT_BLENDED_LIE) = lang("äÌópëŒçR/MPå∏Ç¡ÇƒÇ¢ÇÈëŒè€ÇŸÇ«îÊòJ", "Against DEX,Fatigue decreasing MP enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_INTIMIDATION) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_INTIMIDATION) = lang("ã∫îóínçñ", "Intimidation")
	skilldesc(SKILL_SPACT_INTIMIDATION) = lang("ãÿóÕëŒçR/HPå∏Ç¡ÇƒÇ¢ÇÈëŒè€ÇŸÇ«îÊòJ", "Against STR,Fatigue decreasing HP enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MYSTERIOUS_SONG) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_MYSTERIOUS_SONG) = lang("ñÇè•", "Mysterious Song")
	skilldesc(SKILL_SPACT_MYSTERIOUS_SONG) = lang("ñÇóÕëŒçR/ÉQÅ[ÉWÇ™çÇÇ¢ëŒè€ÇŸÇ«îÊòJ", "Against MAG,Fatigue high power gauge enemies")

	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TUIN_DER_LUSTEN) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 10, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
	skillname(SKILL_SPACT_TUIN_DER_LUSTEN) = lang("âıäyÇÃâÄ", "Tuin der Lusten")
	skilldesc(SKILL_SPACT_TUIN_DER_LUSTEN) = lang("ñ£óÕëŒçR/çLàÊãCéùÇøÇ¢Ç¢Ç±Ç∆/îÊòJëÂ", "Against CHR,Give pleasure to drunken people")

	return

#deffunc calcskill int calcskill_skillid, int calcskill_charid, int calcskill_spellpower_dice_y, int calcskill_spellpower_dice_x
	locvar_calcskill_rs = sdata(sdataref(SKILL_DATAREF_USE, calcskill_skillid), calcskill_charid)
	ele = SKILL_NONE
	elep = 0
	if ( calcskill_skillid == SKILL_SPELL_UNCURSE ) {
		dice1 = 0
		dice2 = 0 + 1
		bonus = locvar_calcskill_rs * calcskill_spellpower_dice_y * 5 / 100
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_RESURRECTION ) {
		dice1 = 0
		dice2 = 0 + 1
		bonus = limit((locvar_calcskill_rs * 5 + calcskill_spellpower_dice_y) / 20 + 40, 40, 100)
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_IDENTIFY ) {
		dice1 = 0
		dice2 = 0 + 1
		bonus = locvar_calcskill_rs * calcskill_spellpower_dice_y * 10 / 100
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_HEAL_LIGHT ) {
		dice1 = 1 + locvar_calcskill_rs / 30
		dice2 = calcskill_spellpower_dice_y / 40 + 5 + 1
		bonus = calcskill_spellpower_dice_y / 30
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_HEAL_CRITICAL ) {
		dice1 = 2 + locvar_calcskill_rs / 26
		dice2 = calcskill_spellpower_dice_y / 25 + 5 + 1
		bonus = calcskill_spellpower_dice_y / 15
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_HEALING_TOUCH ) {
		dice1 = 2 + locvar_calcskill_rs / 22
		dice2 = calcskill_spellpower_dice_y / 18 + 5 + 1
		bonus = calcskill_spellpower_dice_y / 10
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_CURE_OF_ERIS ) {
		dice1 = 3 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 12 + 5 + 1
		bonus = calcskill_spellpower_dice_y / 6
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_CURE_OF_JURE ) {
		dice1 = 5 + locvar_calcskill_rs / 10
		dice2 = calcskill_spellpower_dice_y / 7 + 5 + 1
		bonus = calcskill_spellpower_dice_y / 2
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_HOLY_LIGHT ) {
		dice1 = 0
		dice2 = 0 + 1
		bonus = locvar_calcskill_rs * 5 + calcskill_spellpower_dice_y * 2
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_VANQUISH_HEX ) {
		dice1 = 0
		dice2 = 0 + 1
		bonus = locvar_calcskill_rs * 5 + calcskill_spellpower_dice_y * 3 / 2
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_PRAYER_OF_JURE ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = cdata(CDATA_PIETY, calcskill_charid) / 70 + 1 + 1
		bonus = 0
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_ABSORB_MAGIC ) {
		dice1 = 1 + locvar_calcskill_rs / 20
		dice2 = cdata(CDATA_PIETY, calcskill_charid) / 140 + 1 + 1
		bonus = 0
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_MAGIC_DART ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 20 + 4 + 1
		bonus = 0
		ele = SKILL_RES_MAGIC
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_DARK_EYE ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_DARKNESS
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_NETHER_ARROW ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_NETHER
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_CHAOS_EYE ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_CHAOS
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_NERVE_ARROW ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_NERVE
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_FIRE_CLAW ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_FIRE
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_COLD_BLADE ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_COLD
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_LIGHTNING_SPEAR ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_LIGHTNING
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_MIND_THORN ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_MIND
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_POISON_MUCUS ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_POISON
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_SOUND_CANNONBALL ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_SOUND
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_HYDRO_FANG ) {
		dice1 = calcskill_spellpower_dice_x / 70 + 1 + locvar_calcskill_rs / 13
		dice2 = calcskill_spellpower_dice_y / 20 + 4 + 1
		bonus = 0
		ele = SKILL_RESDMG_CRUSH
		elep = 150 + calcskill_spellpower_dice_y / 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_CRYSTAL_SPEAR ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 20 + 4 + 1
		bonus = 0
		ele = SKILL_RES_MAGIC
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_ICE_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_COLD
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_FIRE_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_FIRE
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_LIGHTNING_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_LIGHTNING
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_DARKNESS_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_DARKNESS
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_MIND_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_MIND
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_WATER_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 20 + 4 + 1
		bonus = 0
		ele = SKILL_RESDMG_CRUSH
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_NETHER_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_NETHER
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_POISON_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_POISON
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_SOUND_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_SOUND
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_CHAOS_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_CHAOS
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_NERVE_BOLT ) {
		dice1 = calcskill_spellpower_dice_x / 65 + 1 + locvar_calcskill_rs / 14
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_NERVE
		elep = 150 + calcskill_spellpower_dice_y / 4
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_ICE_BALL ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_COLD
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_FIRE_BALL ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_FIRE
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_CHAOS_BALL ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_CHAOS
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_RAGING_ROAR ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_SOUND
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_MAGIC_STORM ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 20 + 4 + 1
		bonus = 0
		ele = SKILL_RES_MAGIC
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_ECLIPSE ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_DARKNESS
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_THUNDER_VORTEX ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_LIGHTNING
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_NETHER_WAVE ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_NETHER
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_POISON_STORM ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_POISON
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_ILLUSION_ROAR ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_MIND
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_ANGUISH_JAIL ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 15 + 4 + 1
		bonus = 0
		ele = SKILL_RES_NERVE
		elep = 150 + calcskill_spellpower_dice_y / 5
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_BUBBLE_STORM ) {
		dice1 = calcskill_spellpower_dice_x / 60 + 1 + locvar_calcskill_rs / 15
		dice2 = calcskill_spellpower_dice_y / 20 + 4 + 1
		bonus = 0
		ele = SKILL_RESDMG_CRUSH
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPELL_HEALING_RAIN ) {
		dice1 = locvar_calcskill_rs / 20 + 3
		dice2 = calcskill_spellpower_dice_y / 15 + 5 + 1
		bonus = calcskill_spellpower_dice_y / 10
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_SUICIDE_ATTACK ) {
		dice1 = 1 + locvar_calcskill_rs / 15
		dice2 = 15 + locvar_calcskill_rs / 5 + 1
		bonus = ele == SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_DRAIN_BLOOD ) {
		dice1 = 1 + locvar_calcskill_rs / 15
		dice2 = 3 + locvar_calcskill_rs / 20 + 1
		bonus = 0
		ele = SKILL_RESDMG_CRUSH
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_VORACITY_FANG ) {
		dice1 = 1 + locvar_calcskill_rs / 9
		dice2 = 7 + locvar_calcskill_rs / 10 + 1
		bonus = locvar_calcskill_rs / 2
		ele = SKILL_RES_NETHER
		elep = 200
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_SAND_CANNON ) {
		dice1 = 1 + locvar_calcskill_rs / 12
		dice2 = 2 + locvar_calcskill_rs / 10 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RESDMG_CRUSH
		elep = 200
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_MP_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 12
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_MAGIC, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20 + cdata(CDATA_MAX_MP, calcskill_charid) / 4
		ele = SKILL_RES_MAGIC
		elep = 200
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_POWER_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 12
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_MAGIC, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_MAGIC
		elep = 200
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_FIRE_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_FIRE, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_FIRE
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_FIRE, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_COLD_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_COLD, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_COLD
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_COLD, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_LIGHTNING_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_LIGHTNING, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_LIGHTNING
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_LIGHTNING, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_DARKNESS_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_DARKNESS, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_DARKNESS
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_DARKNESS, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_CHAOS_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_CHAOS, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_CHAOS
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_CHAOS, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_NETHER_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_NETHER, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_NETHER
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_NETHER, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_POISON_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_POISON, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_POISON
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_POISON, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_SOUND_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_SOUND, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_SOUND
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_SOUND, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_NERVE_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_NERVE, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_NERVE
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_NERVE, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_MIND_BREATH ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 2 + locvar_calcskill_rs / 10 + limit(sdata(SKILL_RES_MIND, calcskill_charid) - 400, 1, locvar_calcskill_rs * 2) / 20 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_MIND
		elep = limit(locvar_calcskill_rs + sdata(SKILL_RES_MIND, calcskill_charid), 200, 2000) / 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_ACID_HURRICANE ) {
		dice1 = 1 + locvar_calcskill_rs / 30
		dice2 = 2 + locvar_calcskill_rs / 30 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RESDMG_ACID
		elep = 200
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_E_MAG_TORNADO ) {
		dice1 = 1 + locvar_calcskill_rs / 20
		dice2 = 5 + locvar_calcskill_rs / 10 + 1
		bonus = locvar_calcskill_rs / 20
		ele = SKILL_RES_LIGHTNING
		elep = 200
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_TOUCH_OF_WEAKNESS ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 3 + 1
		bonus = ep == 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_TOUCH_OF_HUNGER ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 3 + 1
		bonus = ep == 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_TOUCH_OF_FEAR ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 3 + 1
		bonus = 0
		ele = SKILL_NONE
		elep = 100 + locvar_calcskill_rs * 2
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_TOUCH_OF_SLEEP ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 3 + 1
		bonus = 0
		ele = SKILL_NONE
		elep = 100 + locvar_calcskill_rs * 3
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_TOUCH_OF_POISON ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 4 + 1
		bonus = 0
		ele = SKILL_RES_POISON
		elep = locvar_calcskill_rs * 4 + 20
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_MEMORY_POISON ) {
		dice1 = 1 + locvar_calcskill_rs / 5
		dice2 = 2 + locvar_calcskill_rs / 10 + 1
		bonus = locvar_calcskill_rs / 5
		ele = SKILL_RES_POISON
		elep = 100
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_TOUCH_OF_NERVE ) {
		dice1 = 1 + locvar_calcskill_rs / 10
		dice2 = 4 + 1
		bonus = 0
		ele = SKILL_RES_NERVE
		elep = locvar_calcskill_rs * 4 + 20
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_EYE_OF_INSANITY ) {
		dice1 = 1 + locvar_calcskill_rs / 20
		dice2 = 10 + 1
		bonus = elep == 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_LOVE_CRAFTING ) {
		dice1 = 1 + locvar_calcskill_rs / 40
		dice2 = 10 + 1
		bonus = 0
		elep = 0
		return 1
		ele = SKILL_NONE
		elep = 0
		return 1
	}
	if ( calcskill_skillid == SKILL_SPACT_GRENADE ) {
		dice1 = calcskill_spellpower_dice_y / 110 + 1
		dice2 = calcskill_spellpower_dice_y / 10 + 2 + 1
		bonus = 0
		ele = SKILL_RES_SOUND
		elep = 150 + calcskill_spellpower_dice_y / 40
		return 1
	}
	return 0

#defcfunc sorg int sorg_skillid, int sorg_charid
	return sdata(sorg_skillid + STARTING_SKILL_SPACT, sorg_charid) / 1000000

#defcfunc randskill
	return rnd(MAX_SKILL_NORMAL - STARTING_SKILL_NORMAL) + STARTING_SKILL_NORMAL

#defcfunc randattb
	return rnd(MAX_SKILL_ATTR_BASIC) + STARTING_SKILL_ATTR

#defcfunc randwskill
	return rnd(MAX_SKILL_WEAPON - STARTING_SKILL_WEAPON) + STARTING_SKILL_WEAPON

