// CUSTOM TWEAKS BY ENRAGED WATERS//
//Idea is to keep tweaks in seperate .hsp for personal use/updating game
//Not idea for gitHub but the logic is all there so creating a gitHub branch is straight forward

/* TO DOS
-Fishing tweak - make it so fishing skill does something past 40
-Create adventurer hospital
*/

/*TWEAK CHECKLIST===========
0. Write tweak in the comments at top.
1. Add the #define MY_TWEAK into mod.hsp.
2. Add tweak into array based off it's category(gameplay, convienence, etc.) in custom_tweaks.hsp
3. Increase listmax by +1 for that category
4. Add it's description.
5. Make sure TweakData(myTweakName, TweakCategory) is actually applied in the code
==========================*/

//cc = CHARA_PLAYER // cc = Current player
//tc = target Character //      tc = map(tlocx, tlocy, 1) - 1       <-  is usual declaration
//cdata(CDATA_GOLD, CHARA_PLAYER) // For Obtaining cdata on line 3552 in mod.hsp such as position, sex, and hunger.
//if ( sdata(SKILL_NORMAL_NEGOTIATION, cc) // For obtaining skill levels such as casting level. Found on line 190 in mod.hsp
//efp is power effectiveness      efp = calcspellpower(efid, cc)
//cbit(CHARA_BIT_NECRO, cc) != 1    <- IF they're NOT necromancy allies
//flt function sorta works as a "reset" option before creating npcs to avoid accidentally giving them unique properties not otherwise specified


*manuScriptTweak //Line 7486 in action.hsp
	manuscriptMAX = 100 + (sdata(SKILL_NORMAL_MEMORIZATION, CHARA_PLAYER)/20 + sdata(SKILL_NORMAL_DETECTION, CHARA_PLAYER)/20)
	if ( gdata(GDATA_FLAG_MANUSCRIPT_IDEAS) > manuscriptMAX  ) {
		gdata(GDATA_FLAG_MANUSCRIPT_IDEAS) = manuscriptMAX
	}
	return

*mineFieldQuestDifficultyTweak //Line 262 on quest.hsp
	//Changes cap on minefield quest.
	qdata(QDATA_LEVEL, rq) = limit(rnd(sdata(SKILL_NORMAL_DETECTION, CHARA_PLAYER) + sdata(SKILL_ATTR_PER, CHARA_PLAYER) / 10 + 5), 2 * int(sqrt(sdata(SKILL_NORMAL_DETECTION, CHARA_PLAYER)) + 1) / 2 + 5, cdata(CDATA_FAME, CHARA_PLAYER) / 1000 + 5)
	if ( qdata(QDATA_LEVEL, rq) > 132 ) { //doubled it
		qdata(QDATA_LEVEL, rq) = 132
	}
	qdata(QDATA_RENEW, rq) = 24 + (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12)
	return
*questResetTimerTweak //Line 108 in quest.hsp
	//rnd(3+1) in front removed
	//Tweaking because with truck vehicle quest renewal sucks ass 
	//There's a bunch of these thru out quest. Ugh.
	qdata(QDATA_RENEW, rq) = 24 + (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12) 
	return

*questRewardTweaks //Line 716 in quest.hsp
	//Improving scaling on quest rewards. 
	//Basically makes it so fame/20,000 improves bronze/pp by +1, same for seeds. 
	p = qdata(QDATA_REWARD, rq)
	if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_HARVEST ) {
		if ( qdata(QDATA_PARAM1, rq) != 0 ) {
			if ( qdata(QDATA_PARAM1, rq) * 125 / 100 < qdata(QDATA_PARAM2, rq) ) {
				p = limit(p * qdata(QDATA_PARAM2, rq) / qdata(QDATA_PARAM1, rq), p, p * 3)
			}
		}
	}
	if ( p != 0 ) {
		flt
		itemcreate -1, ITEM_ID_GOLD_PIECE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), p
	}
	if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_PARTY ) {
		p = limit(rnd(1 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 1, 10)
	}
	else {
		p = limit(rnd(1 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 1, 10)
	}
	if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_CONQUER | qdata(QDATA_EXIST, rq) == QUEST_TYPE_HUNTEX ) {
		p = limit(rnd(1 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 1, 10)
	}
	flt
	itemcreate -1, ITEM_ID_PLATINUM_COIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), p
	if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_PARTY ) {
		if ( qdata(QDATA_PARAM1, rq) * 150 / 100 < qdata(QDATA_PARAM2, rq) ) {
			flt
			gosub *musicTicketFromPartyTimeTweak //EnragedWaters
		}
	}
	if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_MINEFIELD ) {
		flt
		itemcreate -1, ITEM_ID_DEVIL_FRAGMENT, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(1 + qdata(QDATA_PARAM2, rq) / 5, 1, 30)
		inv(INV_ITEM_STATUS, ci) = ITEM_STATUS_NORMAL
		if ( qdata(QDATA_PARAM1, rq) * 125 / 100 <= qdata(QDATA_PARAM2, rq) | qdata(QDATA_VAR, rq) == 1 ) {
			flt
			itemcreate -1, ITEM_ID_BRONZE_COIN, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), limit(rnd(1 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 1, 10)
		}
	}
	if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_HARVEST ) {
		if ( qdata(QDATA_PARAM1, rq) * 125 / 100 < qdata(QDATA_PARAM2, rq) ) {
			flt
			itemcreate -1, ITEM_ID_BRONZE_COIN, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), limit(rnd(1 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 1, 10)
		}
		seedp = rnd(limit(sdata(SKILL_NORMAL_GARDENING, CHARA_PLAYER) / 2, 0, 75) + 80) //2,0,30 to 2,0,75
		if ( seedp >= 90 ) {
			if ( rnd(2) == 0 ) {
				itemcreate -1, ITEM_ID_HERB_SEED, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(rnd(3 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 3, 10)
			}
			else {
				itemcreate -1, ITEM_ID_HERB_SEED, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), limit(rnd(2 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 2, 10)
			}
		}
		if ( seedp >= 70 & seedp < 90 ) {
			if ( rnd(2) == 0 ) {
				itemcreate -1, ITEM_ID_UNKNOWN_SEED, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(rnd(3 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 3, 10)
			}
			else {
				itemcreate -1, ITEM_ID_MAGICAL_SEED, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), limit(rnd(4 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 4, 10)
			}
		}
		if ( seedp >= 50 & seedp < 70 ) {
			itemcreate -1, ITEM_ID_GEM_SEED, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(rnd(4 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 4, 10)
		}
		if ( seedp >= 0 & seedp < 50 ) {
			if ( rnd(2) == 0 ) {
				itemcreate -1, ITEM_ID_FRUIT_SEED, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(rnd(5 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 5, 10)
			}
			else {
				itemcreate -1, ITEM_ID_VEGETABLE_SEED, cdata(CDATA_X, cc), cdata(CDATA_Y, cc), limit(rnd(5 + cdata(CDATA_FAME, CHARA_PLAYER) / 20000), 5, 10)
			}
		}
	}
	return

*fishObtainedTweak//Line 4502 in proc.hsp
	//Changes fish obtained to equal fishing lvl/100 + 1
	item_stack CHARA_PLAYER, ci, (int(sdata(SKILL_NORMAL_FISH, CHARA_PLAYER)/100) +1)
	return
*fishMathTweak
	i = limit(inv(INV_ITEM_FISHING_BAIT, ci) + (rnd(5) == 0) - (rnd(5) == 0), 0, 5) //Fish/Item chosen. 0,5 to 0,3 for no junk.
	repeat int(sdata(SKILL_ATTR_LUC, CHARA_PLAYER)/100) //Every 100 luck do a 50% chance for re-roll
		if ( rnd(2)){
			if (i > 3){ //i = 4/5 is junk.
				i = limit(inv(INV_ITEM_FISHING_BAIT, ci) + (rnd(5) == 0) - (rnd(5) == 0), 0, 5)
			}
		}
	loop
	//Perhaps add re-roll chance if i = 4-5 since i=4/5 is junk? 0-3 is fish. 
	//^Someone mentioned also adding more bait, and quality +1-+9 for fish and maybe bait.
	return
*increasedShopStockTweak //Line 222891 in chat.hsp
    //Raises hard cap on shop rank to 250
    //Then adds 1 additional item per 10 levels of player negotiation
    //Can't do charisma because Gem buff would allow wizards to get literally an extra 50+ items
    if (cdata(CDATA_ROLE, tc) != ROLE_SHOP_STOKE | cdata(CDATA_ROLE, tc) != ROLE_SHOP_MIROK){ //These guys are static
        p = 80 + cdata(CDATA_ROLE_SHOP_LEVEL, tc) // p=40+... default
        if ( p > 400 ) {
            p = 400//400
        }
        p += (sdata(SKILL_NORMAL_NEGOTIATION, CHARA_PLAYER)/10) //Add player's negotiation/10
        if ( cdata(CDATA_ROLE, tc) == ROLE_SHOP_MOYER ) {
            p /= 2 //Moyor in Noyel goes from 1/4 to 1/2
        }
    }
	return

*wizardSpellTweak //Line 22606 in proc.hsp
    //efp = 100000
	return

*houseServantsTweak //Line 1445 in map_user.hsp
	p = rnd(9)
	if ( p == 6 ) {
		cdata(CDATA_ROLE, rc) = ROLE_SHOP_BAKERY
		cdatan(CDATAN_NAME, rc) = lang("魔法店の" + cdatan(CDATAN_NAME, rc), cdatan(CDATAN_NAME, rc) + " of baker store")
		cdata(CDATA_PIC, rc) = xy2pic(6, 4) //Baker sprite, otherwise looks like normal merchant.	
	}
	if ( p == 7 ) {
		cdata(CDATA_ROLE, rc) = ROLE_SHOP_FOOD
		cdatan(CDATAN_NAME, rc) = lang("魔法店の" + cdatan(CDATAN_NAME, rc), cdatan(CDATAN_NAME, rc) + " of food store")
	}
	if ( p == 8 ) {
		cdata(CDATA_ROLE, rc) = ROLE_SHOP_FISH
		cdatan(CDATAN_NAME, rc) = lang("魔法店の" + cdatan(CDATAN_NAME, rc), cdatan(CDATAN_NAME, rc) + " of fish store")
	}
	return

#defcfunc removeSpellOverCastTweak //Line 5558 in proc.hsp
	//Remove spell over cast tweak
	return TRUE

*petArenaTweak //Line 18763 in chat.hsp
	petArenaMatchLimit = 100 // Vanilla=3
	return

*partyTimeDifficultyTweak //Changes formula for party time scaling

	//DEFAULT: qdata(QDATA_LEVEL, rq) = limit(rnd(sdata(SKILL_NORMAL_PERFORMER, CHARA_PLAYER) + sdata(SKILL_ATTR_CHA, CHARA_PLAYER) / 10 + 10), int(1.5 * sqrt(sdata(SKILL_NORMAL_PERFORMER, CHARA_PLAYER))) + 10, cdata(CDATA_FAME, CHARA_PLAYER) / 1000 + 10)
	qdata(QDATA_LEVEL, rq) = limit(rnd(sdata(SKILL_NORMAL_PERFORMER, CHARA_PLAYER) + sdata(SKILL_ATTR_CHA, CHARA_PLAYER) / 5 + 10), int(4.5 * sqrt(sdata(SKILL_NORMAL_PERFORMER, CHARA_PLAYER))) + 10, cdata(CDATA_FAME, CHARA_PLAYER) / 500 + 10)
	qdata(QDATA_RENEW, rq) = 24 + (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12)
	return
*musicTicketFromPartyTimeTweak //Line 742 in quest.hsp
	itemcreate -1, ITEM_ID_MUSIC_TICKET, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 1 + qdata(QDATA_PARAM2, rq) / 8 //  /10 to /8
	return

*nefiaFeverMusicTicketTweak //Line 456 in map_rand.hsp
	nkane = limit(gdata(GDATA_LEVEL), 1, 900) //400 vanilla
	inv(INV_ITEM_NUM, ci) = limit(nkane / 3, 1, 300) //Vanilla was 70 ticket cap - nkane is dungeon floor. 
	return
*questColorChangeTweak //Line 3036 in command.hsp

	//This changes quest description color to green if you own the item already
	// Tweak -> Checks to see if player owns required quest item->If so, changes quest text color for easy turn-in
	if(qdata(QDATA_EXIST, rq) == QUEST_TYPE_SUPPLY | qdata(QDATA_EXIST, rq) == QUEST_TYPE_COLLECT | qdata(QDATA_EXIST, rq) == QUEST_TYPE_COOK){ 
		repeat invrange, invhead //This repeat should be it's own function with parameters since this is duplicated from chat.hsp
			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
				continue
			}
			if ( ibit(ITEM_BIT_NO_DROP, cnt) ) {
				continue
			}
			if ( qdata(QDATA_EXIST, rq) == QUEST_TYPE_COOK ) {
				if ( refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE) == FILTER_ITEM_FOOD ) {
					if ( inv(INV_ITEM_PARAM1, cnt) / 1000 == qdata(QDATA_PARAM1, rq) ) {
						if ( inv(INV_ITEM_PARAM2, cnt) == qdata(QDATA_PARAM2, rq) ) {
							color 25, 150, 25
							break
						}
					}
				}
			}
			if ( inv(INV_ITEM_ID, cnt) == qdata(QDATA_DEST_ITEM, rq) ) {
				color 25, 150, 25 //Item required for quest found
				break
			}
		loop 
	}
	return

*consoleCommandAddAttribute //Line 4130 in system.hsp
	//Wizard command to max out player attributes
	if ( instr(buff, 0, "gain_attribute") != (-1) ) {
		repeat SKILL_ATTR_LUC - SKILL_ATTR_STR, SKILL_ATTR_STR
			skillmod cnt, tc, 1000000000
		loop
		skillmod SKILL_ATTR_LIFE, tc, 1000000000
		skillmod SKILL_ATTR_MANA, tc, 1000000000
		noteadd "Done."
		goto *console_write
	}
	return
	//=====Magnet Spell======
	/*
*db_item_SPELLBOOK_MAGNET
    if ( 20 > objlv ) {
		goto *db_item_DYING_CICADA //*db_item_DYING_CICADA EnragedWaters
	}
	if ( fltselect != 0 ) {
		goto *db_item_DYING_CICADA
	}
	if ( flttypemajor != FILTER_NOTHING ) {
		if ( flttypemajor != FILTER_ITEM_SPELLBOOK ) {
			goto *db_item_DYING_CICADA
		}
	}
	if ( flttypeminor != FILTER_NOTHING ) {
		if ( flttypeminor != FILTER_NONE ) {
			goto *db_item_DYING_CICADA
		}
	}
	if ( filtermax != 0 ) {
		dbtmp = 1
		repeat filtermax
			if ( instr(filter_item(ITEM_ID_SPELLBOOK_OF_MAGNET), 0, filtern(cnt)) == (-1) ) {
				dbtmp = 0
				break
			}
		loop
		if ( dbtmp == 0 ) {
			goto *db_item_DYING_CICADA
		}
	}
	dbsum += 1000000 / (1000 + abs(objlv - 15) * 0) + 1
	dblist(0, dbmax) = ITEM_ID_SPELLBOOK_OF_MAGNET, dbsum
	dbmax++
	return


*db_item_SPELLBOOK_MAGNET_STATS
    if ( dbid == ITEM_ID_SPELLBOOK_OF_MAGNET ) {
		if ( dbmode == DBMODE_SET_STATS | dbmode == DBMODE_SET ) {
			inv(INV_ITEM_VALUE, ci) = 2500
			inv(INV_ITEM_WEIGHT, ci) = 380
		}
		if ( dbmode == DBMODE_SET ) {
			inv(INV_ITEM_ID, ci) = ITEM_ID_SPELLBOOK_OF_MAGNET
			inv(INV_ITEM_PIC, ci) = xy2pic(0, 13)
			reftype = FILTER_ITEM_SPELLBOOK
			reftypeminor = FILTER_NOTHING
			inv(INV_ITEM_NUM, ci) = 1
			fixeditemenc = 0
			inv(INV_ITEM_IDENTIFY_LEVEL, ci) = 0
			inv(INV_ITEM_CHARGE, ci) = 5 + rnd(5) - rnd(5)
			ibitmod ITEM_BIT_CHARGE_ITEM, ci, TRUE
			return
		}
		if ( dbmode == DBMODE_REF ) {
			ichargelevel = 5
			infilterref = ""
			reftype = FILTER_ITEM_SPELLBOOK
			return
		}
		if ( dbmode == DBMODE_REF_SPEC ) {
			if ( dbspec == DBSPEC_TYPE ) {
				return 54000
			}
			if ( dbspec == DBSPEC_TYPE_MINOR ) {
				return 99999
			}
			if ( dbspec == DBSPEC_VALUE_ORG ) {
				return 2500
			}
			if ( dbspec == DBSPEC_PARAM3_ORG ) {
				return
			}
			if ( dbspec == DBSPEC_CAN_READ ) {
				return 1
			}
			if ( dbspec == DBSPEC_PCC ) {
				return 0
			}
			if ( dbspec == DBSPEC_OBJ_LEVEL ) {
				return 20
			}
			if ( dbspec == DBSPEC_RARE_LEVEL ) {
				return 1000
			}
			return 0
		}
		if ( dbmode == DBMODE_ON_READ ) {
			efid = SKILL_SPELL_MAGNET
			efp = 100
			gosub *readSpellbook
			return -1
		}
		if ( dbmode == DBMODE_DESC ) {
			if ( jp ) {
				description(0) = ""
				description(1) = ""
				description(2) = ""
				description(3) = ""
			}
			else {
				description(0) = "The magnet spell book - pull all items to you!"
				description(1) = ""
				description(3) = ""
			}
			return
		}
		return 0
	}
	return

*db_ITEM_ID_SPELLBOOK_OF_MAGNET_MORE_STATS
    ilight(ITEM_ID_SPELLBOOK_OF_MAGNET) = LIGHT_TYPE_NONE
	ialphanameref(ITEM_ID_SPELLBOOK_OF_MAGNET) = ""
	iorgweight(ITEM_ID_SPELLBOOK_OF_MAGNET) = 380
	if ( jp ) {
		ioriginalnameref(ITEM_ID_SPELLBOOK_OF_MAGNET) = ""
	}
	else {
		ioriginalnameref(ITEM_ID_SPELLBOOK_OF_MAGNET) = "magnet"
		ioriginalnameref2(ITEM_ID_SPELLBOOK_OF_MAGNET) = "spellbook"
	}
	ipicref(ITEM_ID_SPELLBOOK_OF_MAGNET) = xy2pic(0, 13)
	p = (ITEM_ID_SPELLBOOK_OF_MAGNET + gdata(GDATA_RAND_SEED_A)) \ 6
	iknownnameref(ITEM_ID_SPELLBOOK_OF_MAGNET) = _namespellbook(p) + strblank + strspellbook
	icolref(ITEM_ID_SPELLBOOK_OF_MAGNET) = _randcolor(p)
	irandomname(ITEM_ID_SPELLBOOK_OF_MAGNET) = 1
	return

*skill_spell_magnet_desc
    sdataref(SKILL_DATAREF_USE, SKILL_SPELL_MAGNET) = SKILL_ATTR_PER, SKILL_TYPE_SP, 45, TARGET_TYPE_SELF_ONLY, 350
	skillname(SKILL_SPELL_MAGNET) = lang("???", "Magnet")
	skilldesc(SKILL_SPELL_MAGNET) = lang("Self", "Self Item Pull")
	skillencdesc(SKILL_SPELL_MAGNET) = lang("", "")
	return

*skill_spell_magnet_calc //Shouldn't need for calcspell() but we'll find out 
    if ( calcskill_skillid == SKILL_SPELL_MAGNET ) {

		return 1
	}
	return

*magnet_spell_effect
    if ( _switch_val == SKILL_SPELL_MAGNET | _switch_sw ) {
		_switch_sw = 0
		gosub *com_txtAdvQuit_Magnet_Spell //*com_txtAdvQuit
		goto *effect_end
	}
	return

*magnet_spell_to_book
    if ( efid == SKILL_SPELL_MAGNET ) {
        dbid = ITEM_ID_SPELLBOOK_OF_MAGNET
    }
	return

*com_txtAdvQuit_Magnet_Spell
	mtilefilecur = -1
	gosub *map_prepareTile
	f = 0
	inv_getheader -1 //Sets invrange and invhead 
	repeat invrange, invhead
		if ( inv(INV_ITEM_NUM, cnt) != 0 ) {
			f = 1 //Shouldn't this break?
		}
	loop
	if ( f == 1 ) {
		if ( cdata(CDATA_HP, CHARA_PLAYER) >= 0 ) {
			txt lang("幾つかの戦利品がある。", "Using Magnet, you can grab some items.")
			screenupdate = 2 //-1
			gosub *screen_draw
			invsubroutine = 1
			invctrl = 22, 0 //27 by default? Avoid "non-property"
			gosub *com_inventory
		}
	}
	mode = MODELIST_MAIN
	atxid = 0
	await 100
	snd SOUNDLIST_POP3
	return

*/